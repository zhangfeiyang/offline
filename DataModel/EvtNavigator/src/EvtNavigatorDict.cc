//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:41:19 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIEvtNavigatorDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EvtNavigatorDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLEvtNavigator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLEvtNavigator(void *p = 0);
   static void *newArray_JMcLcLEvtNavigator(Long_t size, void *p);
   static void delete_JMcLcLEvtNavigator(void *p);
   static void deleteArray_JMcLcLEvtNavigator(void *p);
   static void destruct_JMcLcLEvtNavigator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::EvtNavigator*)
   {
      ::JM::EvtNavigator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::EvtNavigator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::EvtNavigator", ::JM::EvtNavigator::Class_Version(), "./EvtNavigator.h", 14,
                  typeid(::JM::EvtNavigator), DefineBehavior(ptr, ptr),
                  &::JM::EvtNavigator::Dictionary, isa_proxy, 4,
                  sizeof(::JM::EvtNavigator) );
      instance.SetNew(&new_JMcLcLEvtNavigator);
      instance.SetNewArray(&newArray_JMcLcLEvtNavigator);
      instance.SetDelete(&delete_JMcLcLEvtNavigator);
      instance.SetDeleteArray(&deleteArray_JMcLcLEvtNavigator);
      instance.SetDestructor(&destruct_JMcLcLEvtNavigator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::EvtNavigator*)
   {
      return GenerateInitInstanceLocal((::JM::EvtNavigator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::EvtNavigator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *EvtNavigator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EvtNavigator::Class_Name()
{
   return "JM::EvtNavigator";
}

//______________________________________________________________________________
const char *EvtNavigator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::EvtNavigator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EvtNavigator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::EvtNavigator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EvtNavigator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::EvtNavigator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EvtNavigator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::EvtNavigator*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void EvtNavigator::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::EvtNavigator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::EvtNavigator::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::EvtNavigator::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void EvtNavigator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::EvtNavigator.
      TClass *R__cl = ::JM::EvtNavigator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_paths", (void*)&m_paths);
      R__insp.InspectMember("vector<std::string>", (void*)&m_paths, "m_paths.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_writeFlag", (void*)&m_writeFlag);
      R__insp.InspectMember("vector<bool>", (void*)&m_writeFlag, "m_writeFlag.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_refs", (void*)&m_refs);
      R__insp.InspectMember("vector<JM::SmartRef*>", (void*)&m_refs, "m_refs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TimeStamp", &m_TimeStamp);
      R__insp.InspectMember(m_TimeStamp, "m_TimeStamp.");
      TObject::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLEvtNavigator(void *p) {
      return  p ? new(p) ::JM::EvtNavigator : new ::JM::EvtNavigator;
   }
   static void *newArray_JMcLcLEvtNavigator(Long_t nElements, void *p) {
      return p ? new(p) ::JM::EvtNavigator[nElements] : new ::JM::EvtNavigator[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLEvtNavigator(void *p) {
      delete ((::JM::EvtNavigator*)p);
   }
   static void deleteArray_JMcLcLEvtNavigator(void *p) {
      delete [] ((::JM::EvtNavigator*)p);
   }
   static void destruct_JMcLcLEvtNavigator(void *p) {
      typedef ::JM::EvtNavigator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::EvtNavigator

namespace ROOT {
   void vectorlEJMcLcLSmartRefmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEJMcLcLSmartRefmUgR_Dictionary();
   static void *new_vectorlEJMcLcLSmartRefmUgR(void *p = 0);
   static void *newArray_vectorlEJMcLcLSmartRefmUgR(Long_t size, void *p);
   static void delete_vectorlEJMcLcLSmartRefmUgR(void *p);
   static void deleteArray_vectorlEJMcLcLSmartRefmUgR(void *p);
   static void destruct_vectorlEJMcLcLSmartRefmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<JM::SmartRef*>*)
   {
      vector<JM::SmartRef*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<JM::SmartRef*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<JM::SmartRef*>", -2, "prec_stl/vector", 49,
                  typeid(vector<JM::SmartRef*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEJMcLcLSmartRefmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<JM::SmartRef*>) );
      instance.SetNew(&new_vectorlEJMcLcLSmartRefmUgR);
      instance.SetNewArray(&newArray_vectorlEJMcLcLSmartRefmUgR);
      instance.SetDelete(&delete_vectorlEJMcLcLSmartRefmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEJMcLcLSmartRefmUgR);
      instance.SetDestructor(&destruct_vectorlEJMcLcLSmartRefmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<JM::SmartRef*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<JM::SmartRef*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEJMcLcLSmartRefmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<JM::SmartRef*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEJMcLcLSmartRefmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SmartRef*> : new vector<JM::SmartRef*>;
   }
   static void *newArray_vectorlEJMcLcLSmartRefmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SmartRef*>[nElements] : new vector<JM::SmartRef*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEJMcLcLSmartRefmUgR(void *p) {
      delete ((vector<JM::SmartRef*>*)p);
   }
   static void deleteArray_vectorlEJMcLcLSmartRefmUgR(void *p) {
      delete [] ((vector<JM::SmartRef*>*)p);
   }
   static void destruct_vectorlEJMcLcLSmartRefmUgR(void *p) {
      typedef vector<JM::SmartRef*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<JM::SmartRef*>

/********************************************************
* ../src/EvtNavigatorDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEvtNavigatorDict();

extern "C" void G__set_cpp_environmentEvtNavigatorDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("EvtNavigator.h");
  G__cpp_reset_tagtableEvtNavigatorDict();
}
#include <new>
extern "C" int G__cpp_dllrevEvtNavigatorDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::EvtNavigator */
static int G__EvtNavigatorDict_460_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::EvtNavigator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::EvtNavigator[n];
     } else {
       p = new((void*) gvp) JM::EvtNavigator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::EvtNavigator;
     } else {
       p = new((void*) gvp) JM::EvtNavigator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::EvtNavigator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JM::EvtNavigator(*(JM::EvtNavigator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JM::EvtNavigator(*(JM::EvtNavigator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::EvtNavigator& obj = ((JM::EvtNavigator*) G__getstructoffset())->operator=(*(JM::EvtNavigator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->addHeader(*(string*) libp->para[0].ref, (JM::HeaderObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->addHeader((JM::HeaderObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((JM::EvtNavigator*) G__getstructoffset())->copyHeader((JM::EvtNavigator*) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((JM::EvtNavigator*) G__getstructoffset())->copyHeader((JM::EvtNavigator*) G__int(libp->para[0]), *(string*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->adjustPath(*(vector<std::string>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::EvtNavigator*) G__getstructoffset())->getHeader(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((JM::EvtNavigator*) G__getstructoffset())->getPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((const JM::EvtNavigator*) G__getstructoffset())->getPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SmartRef*>& obj = ((JM::EvtNavigator*) G__getstructoffset())->getRef();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SmartRef*>& obj = ((const JM::EvtNavigator*) G__getstructoffset())->getRef();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->setHeaderEntry(*(string*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->setPath(*(vector<std::string>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((JM::EvtNavigator*) G__getstructoffset())->setWriteFlag(*(string*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((JM::EvtNavigator*) G__getstructoffset())->setWriteFlag(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::EvtNavigator*) G__getstructoffset())->writePath(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->resetWriteFlag();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp& obj = ((const JM::EvtNavigator*) G__getstructoffset())->TimeStamp();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp& obj = ((JM::EvtNavigator*) G__getstructoffset())->TimeStamp();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->setTimeStamp(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::EvtNavigator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::EvtNavigator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::EvtNavigator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::EvtNavigator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::EvtNavigator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::EvtNavigator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::EvtNavigator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::EvtNavigator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EvtNavigatorDict_460_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::EvtNavigator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::EvtNavigator G__TJMcLcLEvtNavigator;
static int G__EvtNavigatorDict_460_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::EvtNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::EvtNavigator*) (soff+(sizeof(JM::EvtNavigator)*i)))->~G__TJMcLcLEvtNavigator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::EvtNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::EvtNavigator*) (soff))->~G__TJMcLcLEvtNavigator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::EvtNavigator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEvtNavigatorDict {
 public:
  G__Sizep2memfuncEvtNavigatorDict(): p(&G__Sizep2memfuncEvtNavigatorDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEvtNavigatorDict::*p)();
};

size_t G__get_sizep2memfuncEvtNavigatorDict()
{
  G__Sizep2memfuncEvtNavigatorDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEvtNavigatorDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator))) {
     JM::EvtNavigator *G__Lderived;
     G__Lderived=(JM::EvtNavigator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator),G__get_linked_tagnum(&G__EvtNavigatorDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEvtNavigatorDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SmartRef*>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::EvtNavigator */
static void G__setup_memvarJMcLcLEvtNavigator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator));
   { JM::EvtNavigator *p; p=(JM::EvtNavigator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_paths=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,4,"m_writeFlag=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR),G__defined_typename("vector<JM::SmartRef*>"),-1,4,"m_refs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_TTimeStamp),-1,-1,4,"m_TimeStamp=",0,"Time stamp of event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EvtNavigatorDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEvtNavigatorDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLEvtNavigator(void) {
   /* JM::EvtNavigator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator));
   G__memfunc_setup("EvtNavigator",1242,G__EvtNavigatorDict_460_0_1, 105, G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvtNavigator",1242,G__EvtNavigatorDict_460_0_2, 105, G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator), -1, 0, 1, 1, 1, 0, "u 'JM::EvtNavigator' - 11 - nav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__EvtNavigatorDict_460_0_3, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator), -1, 1, 1, 1, 1, 0, "u 'JM::EvtNavigator' - 11 - nav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHeader",882,G__EvtNavigatorDict_460_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - path U 'JM::HeaderObject' - 0 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHeader",882,G__EvtNavigatorDict_460_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::HeaderObject' - 0 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyHeader",1028,G__EvtNavigatorDict_460_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'JM::EvtNavigator' - 0 - another u 'string' - 11 - oldPath "
"u 'string' - 11 '\"\"' newPath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adjustPath",1048,G__EvtNavigatorDict_460_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - paths", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHeader",905,G__EvtNavigatorDict_460_0_8, 85, G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLHeaderObject), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPath",717,G__EvtNavigatorDict_460_0_9, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPath",717,G__EvtNavigatorDict_460_0_10, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRef",605,G__EvtNavigatorDict_460_0_11, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR), G__defined_typename("vector<JM::SmartRef*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRef",605,G__EvtNavigatorDict_460_0_12, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR), G__defined_typename("vector<JM::SmartRef*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHeaderEntry",1447,G__EvtNavigatorDict_460_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - path i - - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPath",729,G__EvtNavigatorDict_460_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - paths", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteFlag",1233,G__EvtNavigatorDict_460_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - path g - - 0 'false' write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writePath",952,G__EvtNavigatorDict_460_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetWriteFlag",1448,G__EvtNavigatorDict_460_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimeStamp",916,G__EvtNavigatorDict_460_0_18, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_TTimeStamp), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimeStamp",916,G__EvtNavigatorDict_460_0_19, 117, G__get_linked_tagnum(&G__EvtNavigatorDictLN_TTimeStamp), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeStamp",1248,G__EvtNavigatorDict_460_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'JM::EvtNavigator' - 11 - nav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSmartRef",1124,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__EvtNavigatorDictLN_JMcLcLSmartRef), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EvtNavigatorDict_460_0_23, 85, G__get_linked_tagnum(&G__EvtNavigatorDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::EvtNavigator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EvtNavigatorDict_460_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::EvtNavigator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EvtNavigatorDict_460_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::EvtNavigator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EvtNavigatorDict_460_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::EvtNavigator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EvtNavigatorDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EvtNavigatorDict_460_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EvtNavigatorDict_460_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::EvtNavigator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EvtNavigatorDict_460_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::EvtNavigator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EvtNavigatorDict_460_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::EvtNavigator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EvtNavigatorDict_460_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::EvtNavigator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EvtNavigator", 1368, G__EvtNavigatorDict_460_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEvtNavigatorDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEvtNavigatorDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEvtNavigatorDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EvtNavigatorDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_JMcLcLSmartRef = { "JM::SmartRef" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_JMcLcLHeaderObject = { "JM::HeaderObject" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_JMcLcLEvtNavigator = { "JM::EvtNavigator" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR = { "vector<JM::SmartRef*,allocator<JM::SmartRef*> >" , 99 , -1 };
G__linked_taginfo G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SmartRef*,allocator<JM::SmartRef*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEvtNavigatorDict() {
  G__EvtNavigatorDictLN_TClass.tagnum = -1 ;
  G__EvtNavigatorDictLN_TBuffer.tagnum = -1 ;
  G__EvtNavigatorDictLN_TMemberInspector.tagnum = -1 ;
  G__EvtNavigatorDictLN_TObject.tagnum = -1 ;
  G__EvtNavigatorDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_string.tagnum = -1 ;
  G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_TTimeStamp.tagnum = -1 ;
  G__EvtNavigatorDictLN_JM.tagnum = -1 ;
  G__EvtNavigatorDictLN_JMcLcLSmartRef.tagnum = -1 ;
  G__EvtNavigatorDictLN_JMcLcLHeaderObject.tagnum = -1 ;
  G__EvtNavigatorDictLN_JMcLcLEvtNavigator.tagnum = -1 ;
  G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR.tagnum = -1 ;
  G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEvtNavigatorDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_string);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_JM);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_JMcLcLSmartRef);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_JMcLcLHeaderObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_JMcLcLEvtNavigator),sizeof(JM::EvtNavigator),-1,294656,(char*)NULL,G__setup_memvarJMcLcLEvtNavigator,G__setup_memfuncJMcLcLEvtNavigator);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_vectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EvtNavigatorDictLN_reverse_iteratorlEvectorlEJMcLcLSmartRefmUcOallocatorlEJMcLcLSmartRefmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupEvtNavigatorDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEvtNavigatorDict()");
  G__set_cpp_environmentEvtNavigatorDict();
  G__cpp_setup_tagtableEvtNavigatorDict();

  G__cpp_setup_inheritanceEvtNavigatorDict();

  G__cpp_setup_typetableEvtNavigatorDict();

  G__cpp_setup_memvarEvtNavigatorDict();

  G__cpp_setup_memfuncEvtNavigatorDict();
  G__cpp_setup_globalEvtNavigatorDict();
  G__cpp_setup_funcEvtNavigatorDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEvtNavigatorDict();
  return;
}
class G__cpp_setup_initEvtNavigatorDict {
  public:
    G__cpp_setup_initEvtNavigatorDict() { G__add_setup_func("EvtNavigatorDict",(G__incsetup)(&G__cpp_setupEvtNavigatorDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEvtNavigatorDict() { G__remove_setup_func("EvtNavigatorDict"); }
};
G__cpp_setup_initEvtNavigatorDict G__cpp_setup_initializerEvtNavigatorDict;

