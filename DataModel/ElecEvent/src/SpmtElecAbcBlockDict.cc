//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:43:47 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdISpmtElecAbcBlockDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SpmtElecAbcBlockDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLSpmtElecAbcBlock_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLSpmtElecAbcBlock(void *p = 0);
   static void *newArray_JMcLcLSpmtElecAbcBlock(Long_t size, void *p);
   static void delete_JMcLcLSpmtElecAbcBlock(void *p);
   static void deleteArray_JMcLcLSpmtElecAbcBlock(void *p);
   static void destruct_JMcLcLSpmtElecAbcBlock(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::SpmtElecAbcBlock*)
   {
      ::JM::SpmtElecAbcBlock *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::SpmtElecAbcBlock >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::SpmtElecAbcBlock", ::JM::SpmtElecAbcBlock::Class_Version(), "./SpmtElecAbcBlock.h", 38,
                  typeid(::JM::SpmtElecAbcBlock), DefineBehavior(ptr, ptr),
                  &::JM::SpmtElecAbcBlock::Dictionary, isa_proxy, 4,
                  sizeof(::JM::SpmtElecAbcBlock) );
      instance.SetNew(&new_JMcLcLSpmtElecAbcBlock);
      instance.SetNewArray(&newArray_JMcLcLSpmtElecAbcBlock);
      instance.SetDelete(&delete_JMcLcLSpmtElecAbcBlock);
      instance.SetDeleteArray(&deleteArray_JMcLcLSpmtElecAbcBlock);
      instance.SetDestructor(&destruct_JMcLcLSpmtElecAbcBlock);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::SpmtElecAbcBlock*)
   {
      return GenerateInitInstanceLocal((::JM::SpmtElecAbcBlock*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::SpmtElecAbcBlock*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *SpmtElecAbcBlock::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SpmtElecAbcBlock::Class_Name()
{
   return "JM::SpmtElecAbcBlock";
}

//______________________________________________________________________________
const char *SpmtElecAbcBlock::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SpmtElecAbcBlock*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SpmtElecAbcBlock::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SpmtElecAbcBlock*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SpmtElecAbcBlock::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SpmtElecAbcBlock*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SpmtElecAbcBlock::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SpmtElecAbcBlock*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void SpmtElecAbcBlock::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::SpmtElecAbcBlock.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::SpmtElecAbcBlock::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::SpmtElecAbcBlock::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void SpmtElecAbcBlock::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::SpmtElecAbcBlock.
      TClass *R__cl = ::JM::SpmtElecAbcBlock::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_type", &m_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_gain", &m_gain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_board_num", &m_board_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ch_num", &m_ch_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_coarse_time", &m_coarse_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_event_counter", &m_event_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_fine_time", &m_fine_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_charge", &m_charge);
      TObject::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLSpmtElecAbcBlock(void *p) {
      return  p ? new(p) ::JM::SpmtElecAbcBlock : new ::JM::SpmtElecAbcBlock;
   }
   static void *newArray_JMcLcLSpmtElecAbcBlock(Long_t nElements, void *p) {
      return p ? new(p) ::JM::SpmtElecAbcBlock[nElements] : new ::JM::SpmtElecAbcBlock[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLSpmtElecAbcBlock(void *p) {
      delete ((::JM::SpmtElecAbcBlock*)p);
   }
   static void deleteArray_JMcLcLSpmtElecAbcBlock(void *p) {
      delete [] ((::JM::SpmtElecAbcBlock*)p);
   }
   static void destruct_JMcLcLSpmtElecAbcBlock(void *p) {
      typedef ::JM::SpmtElecAbcBlock current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::SpmtElecAbcBlock

/********************************************************
* ../src/SpmtElecAbcBlockDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSpmtElecAbcBlockDict();

extern "C" void G__set_cpp_environmentSpmtElecAbcBlockDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SpmtElecAbcBlock.h");
  G__cpp_reset_tagtableSpmtElecAbcBlockDict();
}
#include <new>
extern "C" int G__cpp_dllrevSpmtElecAbcBlockDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::SpmtElecAbcBlock */
static int G__SpmtElecAbcBlockDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SpmtElecAbcBlock* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SpmtElecAbcBlock[n];
     } else {
       p = new((void*) gvp) JM::SpmtElecAbcBlock[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SpmtElecAbcBlock;
     } else {
       p = new((void*) gvp) JM::SpmtElecAbcBlock;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UChar_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->type();
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setType(*(UChar_t*) G__UCharref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Bool_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->gain();
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setGain(*(Bool_t*) G__Boolref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->board_num();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setBoard_num(*(UShort_t*) G__UShortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->ch_num();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setCh_num(*(UShort_t*) G__UShortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UInt_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->coarse_time();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setCoarse_time(*(UInt_t*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->event_counter();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setEvent_counter(*(UShort_t*) G__UShortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->fine_time();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setFine_time(*(UShort_t*) G__UShortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UInt_t& obj = ((const JM::SpmtElecAbcBlock*) G__getstructoffset())->charge();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->setCharge(*(UInt_t*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::SpmtElecAbcBlock::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SpmtElecAbcBlock::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::SpmtElecAbcBlock::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::SpmtElecAbcBlock::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SpmtElecAbcBlock*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SpmtElecAbcBlock::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SpmtElecAbcBlock::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SpmtElecAbcBlock::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SpmtElecAbcBlockDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SpmtElecAbcBlock::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SpmtElecAbcBlockDict_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::SpmtElecAbcBlock* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::SpmtElecAbcBlock(*(JM::SpmtElecAbcBlock*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::SpmtElecAbcBlock G__TJMcLcLSpmtElecAbcBlock;
static int G__SpmtElecAbcBlockDict_169_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::SpmtElecAbcBlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::SpmtElecAbcBlock*) (soff+(sizeof(JM::SpmtElecAbcBlock)*i)))->~G__TJMcLcLSpmtElecAbcBlock();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::SpmtElecAbcBlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::SpmtElecAbcBlock*) (soff))->~G__TJMcLcLSpmtElecAbcBlock();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SpmtElecAbcBlockDict_169_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SpmtElecAbcBlock* dest = (JM::SpmtElecAbcBlock*) G__getstructoffset();
   *dest = *(JM::SpmtElecAbcBlock*) libp->para[0].ref;
   const JM::SpmtElecAbcBlock& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::SpmtElecAbcBlock */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSpmtElecAbcBlockDict {
 public:
  G__Sizep2memfuncSpmtElecAbcBlockDict(): p(&G__Sizep2memfuncSpmtElecAbcBlockDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSpmtElecAbcBlockDict::*p)();
};

size_t G__get_sizep2memfuncSpmtElecAbcBlockDict()
{
  G__Sizep2memfuncSpmtElecAbcBlockDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSpmtElecAbcBlockDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock))) {
     JM::SpmtElecAbcBlock *G__Lderived;
     G__Lderived=(JM::SpmtElecAbcBlock*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock),G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSpmtElecAbcBlockDict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::SpmtElecAbcBlock */
static void G__setup_memvarJMcLcLSpmtElecAbcBlock(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock));
   { JM::SpmtElecAbcBlock *p; p=(JM::SpmtElecAbcBlock*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_type=",0,"type as from CatiROC");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_gain=",0,"High or Low catiroc gain");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_board_num=",0,"board number");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_ch_num=",0,"per board channel number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_coarse_time=",0,"4-byte coarse time info");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_event_counter=",0,"Per channel Catiroc Event counter");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_fine_time=",0,"2-byte fine time info");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_charge=",0,"2-byte charge info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSpmtElecAbcBlockDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLSpmtElecAbcBlock(void) {
   /* JM::SpmtElecAbcBlock */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock));
   G__memfunc_setup("SpmtElecAbcBlock",1550,G__SpmtElecAbcBlockDict_169_0_1, 105, G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__SpmtElecAbcBlockDict_169_0_2, 98, -1, G__defined_typename("UChar_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__SpmtElecAbcBlockDict_169_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gain",415,G__SpmtElecAbcBlockDict_169_0_4, 103, -1, G__defined_typename("Bool_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGain",715,G__SpmtElecAbcBlockDict_169_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("board_num",951,G__SpmtElecAbcBlockDict_169_0_6, 114, -1, G__defined_typename("UShort_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoard_num",1251,G__SpmtElecAbcBlockDict_169_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch_num",634,G__SpmtElecAbcBlockDict_169_0_8, 114, -1, G__defined_typename("UShort_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCh_num",934,G__SpmtElecAbcBlockDict_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coarse_time",1163,G__SpmtElecAbcBlockDict_169_0_10, 104, -1, G__defined_typename("UInt_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCoarse_time",1463,G__SpmtElecAbcBlockDict_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_counter",1409,G__SpmtElecAbcBlockDict_169_0_12, 114, -1, G__defined_typename("UShort_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvent_counter",1709,G__SpmtElecAbcBlockDict_169_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fine_time",944,G__SpmtElecAbcBlockDict_169_0_14, 114, -1, G__defined_typename("UShort_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFine_time",1244,G__SpmtElecAbcBlockDict_169_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__SpmtElecAbcBlockDict_169_0_16, 104, -1, G__defined_typename("UInt_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCharge",918,G__SpmtElecAbcBlockDict_169_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SpmtElecAbcBlockDict_169_0_18, 85, G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::SpmtElecAbcBlock::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SpmtElecAbcBlockDict_169_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SpmtElecAbcBlock::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SpmtElecAbcBlockDict_169_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::SpmtElecAbcBlock::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SpmtElecAbcBlockDict_169_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::SpmtElecAbcBlock::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SpmtElecAbcBlockDict_169_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SpmtElecAbcBlockDict_169_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SpmtElecAbcBlock::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SpmtElecAbcBlockDict_169_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SpmtElecAbcBlock::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SpmtElecAbcBlockDict_169_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SpmtElecAbcBlock::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SpmtElecAbcBlockDict_169_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SpmtElecAbcBlock::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SpmtElecAbcBlock", 1550, G__SpmtElecAbcBlockDict_169_0_30, (int) ('i'), G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock), -1, 0, 1, 1, 1, 0, "u 'JM::SpmtElecAbcBlock' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpmtElecAbcBlock", 1676, G__SpmtElecAbcBlockDict_169_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SpmtElecAbcBlockDict_169_0_32, (int) ('u'), G__get_linked_tagnum(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock), -1, 1, 1, 1, 1, 0, "u 'JM::SpmtElecAbcBlock' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSpmtElecAbcBlockDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSpmtElecAbcBlockDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSpmtElecAbcBlockDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SpmtElecAbcBlockDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock = { "JM::SpmtElecAbcBlock" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSpmtElecAbcBlockDict() {
  G__SpmtElecAbcBlockDictLN_TClass.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_TBuffer.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_TMemberInspector.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_TObject.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_JM.tagnum = -1 ;
  G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSpmtElecAbcBlockDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_JM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SpmtElecAbcBlockDictLN_JMcLcLSpmtElecAbcBlock),sizeof(JM::SpmtElecAbcBlock),-1,292096,(char*)NULL,G__setup_memvarJMcLcLSpmtElecAbcBlock,G__setup_memfuncJMcLcLSpmtElecAbcBlock);
}
extern "C" void G__cpp_setupSpmtElecAbcBlockDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSpmtElecAbcBlockDict()");
  G__set_cpp_environmentSpmtElecAbcBlockDict();
  G__cpp_setup_tagtableSpmtElecAbcBlockDict();

  G__cpp_setup_inheritanceSpmtElecAbcBlockDict();

  G__cpp_setup_typetableSpmtElecAbcBlockDict();

  G__cpp_setup_memvarSpmtElecAbcBlockDict();

  G__cpp_setup_memfuncSpmtElecAbcBlockDict();
  G__cpp_setup_globalSpmtElecAbcBlockDict();
  G__cpp_setup_funcSpmtElecAbcBlockDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSpmtElecAbcBlockDict();
  return;
}
class G__cpp_setup_initSpmtElecAbcBlockDict {
  public:
    G__cpp_setup_initSpmtElecAbcBlockDict() { G__add_setup_func("SpmtElecAbcBlockDict",(G__incsetup)(&G__cpp_setupSpmtElecAbcBlockDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSpmtElecAbcBlockDict() { G__remove_setup_func("SpmtElecAbcBlockDict"); }
};
G__cpp_setup_initSpmtElecAbcBlockDict G__cpp_setup_initializerSpmtElecAbcBlockDict;

