//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:40:43 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIUniqueIDTableDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "UniqueIDTableDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLTablePerTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLTablePerTree(void *p = 0);
   static void *newArray_JMcLcLTablePerTree(Long_t size, void *p);
   static void delete_JMcLcLTablePerTree(void *p);
   static void deleteArray_JMcLcLTablePerTree(void *p);
   static void destruct_JMcLcLTablePerTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::TablePerTree*)
   {
      ::JM::TablePerTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::TablePerTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::TablePerTree", ::JM::TablePerTree::Class_Version(), "./UniqueIDTable.h", 12,
                  typeid(::JM::TablePerTree), DefineBehavior(ptr, ptr),
                  &::JM::TablePerTree::Dictionary, isa_proxy, 4,
                  sizeof(::JM::TablePerTree) );
      instance.SetNew(&new_JMcLcLTablePerTree);
      instance.SetNewArray(&newArray_JMcLcLTablePerTree);
      instance.SetDelete(&delete_JMcLcLTablePerTree);
      instance.SetDeleteArray(&deleteArray_JMcLcLTablePerTree);
      instance.SetDestructor(&destruct_JMcLcLTablePerTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::TablePerTree*)
   {
      return GenerateInitInstanceLocal((::JM::TablePerTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::TablePerTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void JMcLcLUniqueIDTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLUniqueIDTable(void *p = 0);
   static void *newArray_JMcLcLUniqueIDTable(Long_t size, void *p);
   static void delete_JMcLcLUniqueIDTable(void *p);
   static void deleteArray_JMcLcLUniqueIDTable(void *p);
   static void destruct_JMcLcLUniqueIDTable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::UniqueIDTable*)
   {
      ::JM::UniqueIDTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::UniqueIDTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::UniqueIDTable", ::JM::UniqueIDTable::Class_Version(), "./UniqueIDTable.h", 49,
                  typeid(::JM::UniqueIDTable), DefineBehavior(ptr, ptr),
                  &::JM::UniqueIDTable::Dictionary, isa_proxy, 4,
                  sizeof(::JM::UniqueIDTable) );
      instance.SetNew(&new_JMcLcLUniqueIDTable);
      instance.SetNewArray(&newArray_JMcLcLUniqueIDTable);
      instance.SetDelete(&delete_JMcLcLUniqueIDTable);
      instance.SetDeleteArray(&deleteArray_JMcLcLUniqueIDTable);
      instance.SetDestructor(&destruct_JMcLcLUniqueIDTable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::UniqueIDTable*)
   {
      return GenerateInitInstanceLocal((::JM::UniqueIDTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::UniqueIDTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *TablePerTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TablePerTree::Class_Name()
{
   return "JM::TablePerTree";
}

//______________________________________________________________________________
const char *TablePerTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::TablePerTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TablePerTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::TablePerTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TablePerTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::TablePerTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TablePerTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::TablePerTree*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
TClass *UniqueIDTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *UniqueIDTable::Class_Name()
{
   return "JM::UniqueIDTable";
}

//______________________________________________________________________________
const char *UniqueIDTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::UniqueIDTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UniqueIDTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::UniqueIDTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UniqueIDTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::UniqueIDTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UniqueIDTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::UniqueIDTable*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void UniqueIDTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::UniqueIDTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::UniqueIDTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::UniqueIDTable::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void UniqueIDTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::UniqueIDTable.
      TClass *R__cl = ::JM::UniqueIDTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tables", (void*)&m_tables);
      R__insp.InspectMember("JM::UniqueIDTable::TableMap", (void*)&m_tables, "m_tables.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLUniqueIDTable(void *p) {
      return  p ? new(p) ::JM::UniqueIDTable : new ::JM::UniqueIDTable;
   }
   static void *newArray_JMcLcLUniqueIDTable(Long_t nElements, void *p) {
      return p ? new(p) ::JM::UniqueIDTable[nElements] : new ::JM::UniqueIDTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLUniqueIDTable(void *p) {
      delete ((::JM::UniqueIDTable*)p);
   }
   static void deleteArray_JMcLcLUniqueIDTable(void *p) {
      delete [] ((::JM::UniqueIDTable*)p);
   }
   static void destruct_JMcLcLUniqueIDTable(void *p) {
      typedef ::JM::UniqueIDTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::UniqueIDTable

      namespace JM {
//______________________________________________________________________________
void TablePerTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::TablePerTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::TablePerTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::TablePerTree::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void TablePerTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::TablePerTree.
      TClass *R__cl = ::JM::TablePerTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_UniqueIDs", (void*)&m_UniqueIDs);
      R__insp.InspectMember("JM::TablePerTree::UIDVector", (void*)&m_UniqueIDs, "m_UniqueIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BranchIDs", (void*)&m_BranchIDs);
      R__insp.InspectMember("JM::TablePerTree::BIDVector", (void*)&m_BranchIDs, "m_BranchIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_GUIDs", (void*)&m_GUIDs);
      R__insp.InspectMember("JM::TablePerTree::GUIDVector", (void*)&m_GUIDs, "m_GUIDs.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLTablePerTree(void *p) {
      return  p ? new(p) ::JM::TablePerTree : new ::JM::TablePerTree;
   }
   static void *newArray_JMcLcLTablePerTree(Long_t nElements, void *p) {
      return p ? new(p) ::JM::TablePerTree[nElements] : new ::JM::TablePerTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLTablePerTree(void *p) {
      delete ((::JM::TablePerTree*)p);
   }
   static void deleteArray_JMcLcLTablePerTree(void *p) {
      delete [] ((::JM::TablePerTree*)p);
   }
   static void destruct_JMcLcLTablePerTree(void *p) {
      typedef ::JM::TablePerTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::TablePerTree

namespace ROOT {
   void maplEstringcOJMcLcLTablePerTreemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOJMcLcLTablePerTreemUgR_Dictionary();
   static void *new_maplEstringcOJMcLcLTablePerTreemUgR(void *p = 0);
   static void *newArray_maplEstringcOJMcLcLTablePerTreemUgR(Long_t size, void *p);
   static void delete_maplEstringcOJMcLcLTablePerTreemUgR(void *p);
   static void deleteArray_maplEstringcOJMcLcLTablePerTreemUgR(void *p);
   static void destruct_maplEstringcOJMcLcLTablePerTreemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,JM::TablePerTree*>*)
   {
      map<string,JM::TablePerTree*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,JM::TablePerTree*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,JM::TablePerTree*>", -2, "prec_stl/map", 63,
                  typeid(map<string,JM::TablePerTree*>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOJMcLcLTablePerTreemUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,JM::TablePerTree*>) );
      instance.SetNew(&new_maplEstringcOJMcLcLTablePerTreemUgR);
      instance.SetNewArray(&newArray_maplEstringcOJMcLcLTablePerTreemUgR);
      instance.SetDelete(&delete_maplEstringcOJMcLcLTablePerTreemUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOJMcLcLTablePerTreemUgR);
      instance.SetDestructor(&destruct_maplEstringcOJMcLcLTablePerTreemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,JM::TablePerTree*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,JM::TablePerTree*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOJMcLcLTablePerTreemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,JM::TablePerTree*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOJMcLcLTablePerTreemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,JM::TablePerTree*> : new map<string,JM::TablePerTree*>;
   }
   static void *newArray_maplEstringcOJMcLcLTablePerTreemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,JM::TablePerTree*>[nElements] : new map<string,JM::TablePerTree*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOJMcLcLTablePerTreemUgR(void *p) {
      delete ((map<string,JM::TablePerTree*>*)p);
   }
   static void deleteArray_maplEstringcOJMcLcLTablePerTreemUgR(void *p) {
      delete [] ((map<string,JM::TablePerTree*>*)p);
   }
   static void destruct_maplEstringcOJMcLcLTablePerTreemUgR(void *p) {
      typedef map<string,JM::TablePerTree*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,JM::TablePerTree*>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

namespace ROOT {
   void vectorlEvectorlEshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<short> >*)
   {
      vector<vector<short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<short> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<short> >) );
      instance.SetNew(&new_vectorlEvectorlEshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> > : new vector<vector<short> >;
   }
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> >[nElements] : new vector<vector<short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEshortgRsPgR(void *p) {
      delete ((vector<vector<short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p) {
      delete [] ((vector<vector<short> >*)p);
   }
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p) {
      typedef vector<vector<short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<short> >

/********************************************************
* ../src/UniqueIDTableDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableUniqueIDTableDict();

extern "C" void G__set_cpp_environmentUniqueIDTableDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("UniqueIDTable.h");
  G__cpp_reset_tagtableUniqueIDTableDict();
}
#include <new>
extern "C" int G__cpp_dllrevUniqueIDTableDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::TablePerTree */
static int G__UniqueIDTableDict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::TablePerTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::TablePerTree[n];
     } else {
       p = new((void*) gvp) JM::TablePerTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::TablePerTree;
     } else {
       p = new((void*) gvp) JM::TablePerTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::BIDVector& obj = ((JM::TablePerTree*) G__getstructoffset())->GetBranchIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::UIDVector& obj = ((JM::TablePerTree*) G__getstructoffset())->GetUniqueIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::GUIDVector& obj = ((JM::TablePerTree*) G__getstructoffset())->GetGUIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::BIDVector& obj = ((const JM::TablePerTree*) G__getstructoffset())->GetBranchIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::UIDVector& obj = ((const JM::TablePerTree*) G__getstructoffset())->GetUniqueIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::TablePerTree::GUIDVector& obj = ((const JM::TablePerTree*) G__getstructoffset())->GetGUIDs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::TablePerTree*) G__getstructoffset())->SetGUIDs(*(JM::TablePerTree::GUIDVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::TablePerTree*) G__getstructoffset())->SetIDs(*(JM::TablePerTree::UIDVector*) libp->para[0].ref, *(JM::TablePerTree::BIDVector*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::TablePerTree*) G__getstructoffset())->MergeTable(*(JM::TablePerTree*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::TablePerTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::TablePerTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::TablePerTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::TablePerTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::TablePerTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::TablePerTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::TablePerTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::TablePerTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::TablePerTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UniqueIDTableDict_404_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::TablePerTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::TablePerTree(*(JM::TablePerTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::TablePerTree G__TJMcLcLTablePerTree;
static int G__UniqueIDTableDict_404_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::TablePerTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::TablePerTree*) (soff+(sizeof(JM::TablePerTree)*i)))->~G__TJMcLcLTablePerTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::TablePerTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::TablePerTree*) (soff))->~G__TJMcLcLTablePerTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UniqueIDTableDict_404_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::TablePerTree* dest = (JM::TablePerTree*) G__getstructoffset();
   *dest = *(JM::TablePerTree*) libp->para[0].ref;
   const JM::TablePerTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JM::UniqueIDTable */
static int G__UniqueIDTableDict_421_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::UniqueIDTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::UniqueIDTable[n];
     } else {
       p = new((void*) gvp) JM::UniqueIDTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::UniqueIDTable;
     } else {
       p = new((void*) gvp) JM::UniqueIDTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::UniqueIDTable*) G__getstructoffset())->AddTable(*(string*) libp->para[0].ref, *(JM::TablePerTree::GUIDVector*) libp->para[1].ref
, *(JM::TablePerTree::UIDVector*) libp->para[2].ref, *(JM::TablePerTree::BIDVector*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::UniqueIDTable*) G__getstructoffset())->MergeTable(*(JM::UniqueIDTable*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::UniqueIDTable::TableMap& obj = ((JM::UniqueIDTable*) G__getstructoffset())->GetTable();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::UniqueIDTable::TableMap& obj = ((const JM::UniqueIDTable*) G__getstructoffset())->GetTable();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::UniqueIDTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::UniqueIDTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::UniqueIDTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::UniqueIDTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::UniqueIDTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::UniqueIDTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::UniqueIDTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::UniqueIDTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UniqueIDTableDict_421_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::UniqueIDTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UniqueIDTableDict_421_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::UniqueIDTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::UniqueIDTable(*(JM::UniqueIDTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::UniqueIDTable G__TJMcLcLUniqueIDTable;
static int G__UniqueIDTableDict_421_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::UniqueIDTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::UniqueIDTable*) (soff+(sizeof(JM::UniqueIDTable)*i)))->~G__TJMcLcLUniqueIDTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::UniqueIDTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::UniqueIDTable*) (soff))->~G__TJMcLcLUniqueIDTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UniqueIDTableDict_421_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::UniqueIDTable* dest = (JM::UniqueIDTable*) G__getstructoffset();
   *dest = *(JM::UniqueIDTable*) libp->para[0].ref;
   const JM::UniqueIDTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::TablePerTree */

/* JM::UniqueIDTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncUniqueIDTableDict {
 public:
  G__Sizep2memfuncUniqueIDTableDict(): p(&G__Sizep2memfuncUniqueIDTableDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncUniqueIDTableDict::*p)();
};

size_t G__get_sizep2memfuncUniqueIDTableDict()
{
  G__Sizep2memfuncUniqueIDTableDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceUniqueIDTableDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree))) {
     JM::TablePerTree *G__Lderived;
     G__Lderived=(JM::TablePerTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree),G__get_linked_tagnum(&G__UniqueIDTableDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable))) {
     JM::UniqueIDTable *G__Lderived;
     G__Lderived=(JM::UniqueIDTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable),G__get_linked_tagnum(&G__UniqueIDTableDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableUniqueIDTableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Int_t> >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("UIDVector",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Short_t>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Short_t> >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Short_t> >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BIDVector",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GUIDVector",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TablePerTree*>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TablePerTree*>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,JM::TablePerTree*>",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,JM::TablePerTree*,less<string> >",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TableMap",117,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::TablePerTree */
static void G__setup_memvarJMcLcLTablePerTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   { JM::TablePerTree *p; p=(JM::TablePerTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("UIDVector"),-1,4,"m_UniqueIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),G__defined_typename("BIDVector"),-1,4,"m_BranchIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("GUIDVector"),-1,4,"m_GUIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JM::UniqueIDTable */
static void G__setup_memvarJMcLcLUniqueIDTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable));
   { JM::UniqueIDTable *p; p=(JM::UniqueIDTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR),G__defined_typename("TableMap"),-1,4,"m_tables=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarUniqueIDTableDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLTablePerTree(void) {
   /* JM::TablePerTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree));
   G__memfunc_setup("TablePerTree",1183,G__UniqueIDTableDict_404_0_1, 105, G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchIDs",1134,G__UniqueIDTableDict_404_0_2, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), G__defined_typename("JM::TablePerTree::BIDVector"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUniqueIDs",1175,G__UniqueIDTableDict_404_0_3, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), G__defined_typename("JM::TablePerTree::UIDVector"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGUIDs",700,G__UniqueIDTableDict_404_0_4, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("JM::TablePerTree::GUIDVector"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchIDs",1134,G__UniqueIDTableDict_404_0_5, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), G__defined_typename("JM::TablePerTree::BIDVector"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUniqueIDs",1175,G__UniqueIDTableDict_404_0_6, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), G__defined_typename("JM::TablePerTree::UIDVector"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGUIDs",700,G__UniqueIDTableDict_404_0_7, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("JM::TablePerTree::GUIDVector"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGUIDs",712,G__UniqueIDTableDict_404_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'JM::TablePerTree::GUIDVector' 11 - guids", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDs",556,G__UniqueIDTableDict_404_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' 'JM::TablePerTree::UIDVector' 11 - uids u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >' 'JM::TablePerTree::BIDVector' 11 - bids", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeTable",984,G__UniqueIDTableDict_404_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'JM::TablePerTree' - 11 - table", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UniqueIDTableDict_404_0_11, 85, G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::TablePerTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UniqueIDTableDict_404_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::TablePerTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UniqueIDTableDict_404_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::TablePerTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UniqueIDTableDict_404_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::TablePerTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UniqueIDTableDict_404_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UniqueIDTableDict_404_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::TablePerTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UniqueIDTableDict_404_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::TablePerTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UniqueIDTableDict_404_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::TablePerTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UniqueIDTableDict_404_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::TablePerTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TablePerTree", 1183, G__UniqueIDTableDict_404_0_23, (int) ('i'), G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree), -1, 0, 1, 1, 1, 0, "u 'JM::TablePerTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TablePerTree", 1309, G__UniqueIDTableDict_404_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UniqueIDTableDict_404_0_25, (int) ('u'), G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLTablePerTree), -1, 1, 1, 1, 1, 0, "u 'JM::TablePerTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJMcLcLUniqueIDTable(void) {
   /* JM::UniqueIDTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable));
   G__memfunc_setup("UniqueIDTable",1260,G__UniqueIDTableDict_421_0_1, 105, G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTable",753,G__UniqueIDTableDict_421_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 11 - treename u 'vector<string,allocator<string> >' 'JM::TablePerTree::GUIDVector' 11 - guid "
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' 'JM::TablePerTree::UIDVector' 11 - uid u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >' 'JM::TablePerTree::BIDVector' 11 - bid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeTable",984,G__UniqueIDTableDict_421_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'JM::UniqueIDTable' - 11 - table", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__UniqueIDTableDict_421_0_4, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR), G__defined_typename("JM::UniqueIDTable::TableMap"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__UniqueIDTableDict_421_0_5, 117, G__get_linked_tagnum(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR), G__defined_typename("JM::UniqueIDTable::TableMap"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UniqueIDTableDict_421_0_6, 85, G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::UniqueIDTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UniqueIDTableDict_421_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::UniqueIDTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UniqueIDTableDict_421_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::UniqueIDTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UniqueIDTableDict_421_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::UniqueIDTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UniqueIDTableDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UniqueIDTableDict_421_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UniqueIDTableDict_421_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::UniqueIDTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UniqueIDTableDict_421_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::UniqueIDTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UniqueIDTableDict_421_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::UniqueIDTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UniqueIDTableDict_421_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::UniqueIDTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UniqueIDTable", 1260, G__UniqueIDTableDict_421_0_18, (int) ('i'), G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable), -1, 0, 1, 1, 1, 0, "u 'JM::UniqueIDTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UniqueIDTable", 1386, G__UniqueIDTableDict_421_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UniqueIDTableDict_421_0_20, (int) ('u'), G__get_linked_tagnum(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable), -1, 1, 1, 1, 1, 0, "u 'JM::UniqueIDTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncUniqueIDTableDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalUniqueIDTableDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcUniqueIDTableDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__UniqueIDTableDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_JMcLcLTablePerTree = { "JM::TablePerTree" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_JMcLcLUniqueIDTable = { "JM::UniqueIDTable" , 99 , -1 };
G__linked_taginfo G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR = { "map<string,JM::TablePerTree*,less<string>,allocator<pair<const string,JM::TablePerTree*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableUniqueIDTableDict() {
  G__UniqueIDTableDictLN_TClass.tagnum = -1 ;
  G__UniqueIDTableDictLN_TBuffer.tagnum = -1 ;
  G__UniqueIDTableDictLN_TMemberInspector.tagnum = -1 ;
  G__UniqueIDTableDictLN_TObject.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_string.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_JM.tagnum = -1 ;
  G__UniqueIDTableDictLN_JMcLcLTablePerTree.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UniqueIDTableDictLN_JMcLcLUniqueIDTable.tagnum = -1 ;
  G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableUniqueIDTableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_string);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_JM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_JMcLcLTablePerTree),sizeof(JM::TablePerTree),-1,292096,(char*)NULL,G__setup_memvarJMcLcLTablePerTree,G__setup_memfuncJMcLcLTablePerTree);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_JMcLcLUniqueIDTable),sizeof(JM::UniqueIDTable),-1,292096,(char*)NULL,G__setup_memvarJMcLcLUniqueIDTable,G__setup_memfuncJMcLcLUniqueIDTable);
   G__get_linked_tagnum_fwd(&G__UniqueIDTableDictLN_maplEstringcOJMcLcLTablePerTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOJMcLcLTablePerTreemUgRsPgRsPgR);
}
extern "C" void G__cpp_setupUniqueIDTableDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupUniqueIDTableDict()");
  G__set_cpp_environmentUniqueIDTableDict();
  G__cpp_setup_tagtableUniqueIDTableDict();

  G__cpp_setup_inheritanceUniqueIDTableDict();

  G__cpp_setup_typetableUniqueIDTableDict();

  G__cpp_setup_memvarUniqueIDTableDict();

  G__cpp_setup_memfuncUniqueIDTableDict();
  G__cpp_setup_globalUniqueIDTableDict();
  G__cpp_setup_funcUniqueIDTableDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncUniqueIDTableDict();
  return;
}
class G__cpp_setup_initUniqueIDTableDict {
  public:
    G__cpp_setup_initUniqueIDTableDict() { G__add_setup_func("UniqueIDTableDict",(G__incsetup)(&G__cpp_setupUniqueIDTableDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initUniqueIDTableDict() { G__remove_setup_func("UniqueIDTableDict"); }
};
G__cpp_setup_initUniqueIDTableDict G__cpp_setup_initializerUniqueIDTableDict;

