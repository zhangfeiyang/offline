//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:40:42 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdISmartRefDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SmartRefDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLSmartRef_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLSmartRef(void *p = 0);
   static void *newArray_JMcLcLSmartRef(Long_t size, void *p);
   static void delete_JMcLcLSmartRef(void *p);
   static void deleteArray_JMcLcLSmartRef(void *p);
   static void destruct_JMcLcLSmartRef(void *p);
   static void streamer_JMcLcLSmartRef(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::SmartRef*)
   {
      ::JM::SmartRef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::SmartRef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::SmartRef", ::JM::SmartRef::Class_Version(), "./SmartRef.h", 17,
                  typeid(::JM::SmartRef), DefineBehavior(ptr, ptr),
                  &::JM::SmartRef::Dictionary, isa_proxy, 1,
                  sizeof(::JM::SmartRef) );
      instance.SetNew(&new_JMcLcLSmartRef);
      instance.SetNewArray(&newArray_JMcLcLSmartRef);
      instance.SetDelete(&delete_JMcLcLSmartRef);
      instance.SetDeleteArray(&deleteArray_JMcLcLSmartRef);
      instance.SetDestructor(&destruct_JMcLcLSmartRef);
      instance.SetStreamerFunc(&streamer_JMcLcLSmartRef);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::SmartRef*)
   {
      return GenerateInitInstanceLocal((::JM::SmartRef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::SmartRef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *SmartRef::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SmartRef::Class_Name()
{
   return "JM::SmartRef";
}

//______________________________________________________________________________
const char *SmartRef::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SmartRef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SmartRef::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SmartRef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SmartRef::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SmartRef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SmartRef::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SmartRef*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void SmartRef::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::SmartRef.
      TClass *R__cl = ::JM::SmartRef::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_entry", &m_entry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_refObjTemp", &m_refObjTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pid", &m_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_isLoaded", &m_isLoaded);
      TObject::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLSmartRef(void *p) {
      return  p ? new(p) ::JM::SmartRef : new ::JM::SmartRef;
   }
   static void *newArray_JMcLcLSmartRef(Long_t nElements, void *p) {
      return p ? new(p) ::JM::SmartRef[nElements] : new ::JM::SmartRef[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLSmartRef(void *p) {
      delete ((::JM::SmartRef*)p);
   }
   static void deleteArray_JMcLcLSmartRef(void *p) {
      delete [] ((::JM::SmartRef*)p);
   }
   static void destruct_JMcLcLSmartRef(void *p) {
      typedef ::JM::SmartRef current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_JMcLcLSmartRef(TBuffer &buf, void *obj) {
      ((::JM::SmartRef*)obj)->::JM::SmartRef::Streamer(buf);
   }
} // end of namespace ROOT for class ::JM::SmartRef

/********************************************************
* ../src/SmartRefDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSmartRefDict();

extern "C" void G__set_cpp_environmentSmartRefDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SmartRef.h");
  G__cpp_reset_tagtableSmartRefDict();
}
#include <new>
extern "C" int G__cpp_dllrevSmartRefDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::SmartRef */
static int G__SmartRefDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SmartRef* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SmartRef[n];
     } else {
       p = new((void*) gvp) JM::SmartRef[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SmartRef;
     } else {
       p = new((void*) gvp) JM::SmartRef;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SmartRef* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JM::SmartRef(*(JM::SmartRef*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JM::SmartRef(*(JM::SmartRef*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SmartRef*) G__getstructoffset())->operator=((JM::EventObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::SmartRef& obj = ((JM::SmartRef*) G__getstructoffset())->operator=(*(JM::SmartRef*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SmartRef*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JM::EventObject& obj = ((JM::SmartRef*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SmartRef*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SmartRef*) G__getstructoffset())->SetObject((JM::EventObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SmartRef*) G__getstructoffset())->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::SmartRef*) G__getstructoffset())->HasObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const JM::SmartRef*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Long64_t& obj = ((const JM::SmartRef*) G__getstructoffset())->entry();
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SmartRef*) G__getstructoffset())->setEntry(*(Long64_t*) G__Longlongref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::SmartRef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SmartRef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::SmartRef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::SmartRef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SmartRef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SmartRef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SmartRef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SmartRef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SmartRefDict_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SmartRef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::SmartRef G__TJMcLcLSmartRef;
static int G__SmartRefDict_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::SmartRef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::SmartRef*) (soff+(sizeof(JM::SmartRef)*i)))->~G__TJMcLcLSmartRef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::SmartRef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::SmartRef*) (soff))->~G__TJMcLcLSmartRef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::SmartRef */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSmartRefDict {
 public:
  G__Sizep2memfuncSmartRefDict(): p(&G__Sizep2memfuncSmartRefDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSmartRefDict::*p)();
};

size_t G__get_sizep2memfuncSmartRefDict()
{
  G__Sizep2memfuncSmartRefDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSmartRefDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef))) {
     JM::SmartRef *G__Lderived;
     G__Lderived=(JM::SmartRef*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef),G__get_linked_tagnum(&G__SmartRefDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSmartRefDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SmartRefDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SmartRefDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SmartRefDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SmartRefDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::SmartRef */
static void G__setup_memvarJMcLcLSmartRef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef));
   { JM::SmartRef *p; p=(JM::SmartRef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"m_entry=",0,"Entry number of the referenced object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLEventObject),-1,-1,4,"m_refObjTemp=",0,"! Transient pointer to the referenced object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SmartRefDictLN_TProcessID),-1,-1,4,"m_pid=",0,"! Transient pointer to TProcessID when SmartRef was written ");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"m_isLoaded=",0,"! To mark whether this SmartRef instance is loaded from file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SmartRefDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSmartRefDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLSmartRef(void) {
   /* JM::SmartRef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef));
   G__memfunc_setup("SmartRef",804,G__SmartRefDict_170_0_1, 105, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SmartRef",804,G__SmartRefDict_170_0_2, 105, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef), -1, 0, 1, 1, 1, 0, "u 'JM::SmartRef' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SmartRefDict_170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::EventObject' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SmartRefDict_170_0_4, 117, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLSmartRef), -1, 1, 1, 1, 1, 0, "u 'JM::SmartRef' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__SmartRefDict_170_0_5, 85, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLEventObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__SmartRefDict_170_0_6, 117, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLEventObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SmartRefDict_170_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetObject",899,G__SmartRefDict_170_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::EventObject' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__SmartRefDict_170_0_9, 85, G__get_linked_tagnum(&G__SmartRefDictLN_JMcLcLEventObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasObject",883,G__SmartRefDict_170_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__SmartRefDict_170_0_11, 85, G__get_linked_tagnum(&G__SmartRefDictLN_TProcessID), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("entry",562,G__SmartRefDict_170_0_12, 110, -1, G__defined_typename("Long64_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEntry",862,G__SmartRefDict_170_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SmartRefDict_170_0_14, 85, G__get_linked_tagnum(&G__SmartRefDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::SmartRef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SmartRefDict_170_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SmartRef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SmartRefDict_170_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::SmartRef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SmartRefDict_170_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::SmartRef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SmartRefDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SmartRefDict_170_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SmartRefDict_170_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SmartRef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SmartRefDict_170_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SmartRef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SmartRefDict_170_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SmartRef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SmartRefDict_170_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SmartRef::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SmartRef", 930, G__SmartRefDict_170_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSmartRefDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSmartRefDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSmartRefDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SmartRefDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_TProcessID = { "TProcessID" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__SmartRefDictLN_JMcLcLEventObject = { "JM::EventObject" , 99 , -1 };
G__linked_taginfo G__SmartRefDictLN_JMcLcLSmartRef = { "JM::SmartRef" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSmartRefDict() {
  G__SmartRefDictLN_TClass.tagnum = -1 ;
  G__SmartRefDictLN_TBuffer.tagnum = -1 ;
  G__SmartRefDictLN_TMemberInspector.tagnum = -1 ;
  G__SmartRefDictLN_TObject.tagnum = -1 ;
  G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SmartRefDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SmartRefDictLN_TProcessID.tagnum = -1 ;
  G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SmartRefDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SmartRefDictLN_JM.tagnum = -1 ;
  G__SmartRefDictLN_JMcLcLEventObject.tagnum = -1 ;
  G__SmartRefDictLN_JMcLcLSmartRef.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSmartRefDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_TProcessID);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_JM);
   G__get_linked_tagnum_fwd(&G__SmartRefDictLN_JMcLcLEventObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SmartRefDictLN_JMcLcLSmartRef),sizeof(JM::SmartRef),-1,98048,(char*)NULL,G__setup_memvarJMcLcLSmartRef,G__setup_memfuncJMcLcLSmartRef);
}
extern "C" void G__cpp_setupSmartRefDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSmartRefDict()");
  G__set_cpp_environmentSmartRefDict();
  G__cpp_setup_tagtableSmartRefDict();

  G__cpp_setup_inheritanceSmartRefDict();

  G__cpp_setup_typetableSmartRefDict();

  G__cpp_setup_memvarSmartRefDict();

  G__cpp_setup_memfuncSmartRefDict();
  G__cpp_setup_globalSmartRefDict();
  G__cpp_setup_funcSmartRefDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSmartRefDict();
  return;
}
class G__cpp_setup_initSmartRefDict {
  public:
    G__cpp_setup_initSmartRefDict() { G__add_setup_func("SmartRefDict",(G__incsetup)(&G__cpp_setupSmartRefDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSmartRefDict() { G__remove_setup_func("SmartRefDict"); }
};
G__cpp_setup_initSmartRefDict G__cpp_setup_initializerSmartRefDict;

