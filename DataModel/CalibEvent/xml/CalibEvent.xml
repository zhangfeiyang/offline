<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE xdd SYSTEM "xdd.dtd">

<xdd>
    <package name = "CalibEvent">

        <import name = "Event/EventObject"/>
        <import name = "CalibPMTChannel"/>
        <import name = "list" std="TRUE"/>

        <class name = "CalibEvent"
            author="ZHANG Kun"
            desc = "Calibration event class">

            <base name = "EventObject"/>
            <attribute 
                name="calibPMTCol" 
                type="std::list&lt;JM::CalibPMTChannel*&gt;"
                desc="Collection of CalibPMTChannel in a evt"
                />
            <method
                name="getCalibPmtChannel"
                desc="Get a pmt channel via pmtid"
                argList="unsigned int pmtid"
                const="TRUE"
                type="const JM::CalibPMTChannel*">
                <code>
                    std::list&lt;JM::CalibPMTChannel*&gt;::const_iterator cpIter;
                    cpIter = m_calibPMTCol.begin();
                    while(cpIter!=m_calibPMTCol.end())
                    {
                        if((*cpIter)-&gt;pmtId()==pmtid) break;
                        cpIter++;
                    }
                    if(cpIter==m_calibPMTCol.end()) return 0;
                    return *cpIter;

                </code>
            </method>
            
            <method
                name="addCalibPmtChannel"
                desc="Add a Calibrate pmt channel to this event"
                argList="unsigned int pmtid"
                type="JM::CalibPMTChannel*">
                <code>
                    JM::CalibPMTChannel* cp = 0;
                    if(!this-&gt;getCalibPmtChannel(pmtid)){
                        cp = new JM::CalibPMTChannel(pmtid);
                        m_calibPMTCol.push_back(cp);
                    }
                    return cp;
                </code>
            </method>

            <destructor desc="destructor for SimPMTHeader.">
                <code>
                    for (std::list&lt;JM::CalibPMTChannel*&gt;::iterator it = m_calibPMTCol.begin();
                    it != m_calibPMTCol.end(); ++it) {
                        if (*it) {
                         delete (*it);
                        }
                    }
                    m_calibPMTCol.clear();
                </code>
            </destructor>

        </class>
    </package>
</xdd>
