//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:45:31 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdISimHeaderDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SimHeaderDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLSimHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLSimHeader(void *p = 0);
   static void *newArray_JMcLcLSimHeader(Long_t size, void *p);
   static void delete_JMcLcLSimHeader(void *p);
   static void deleteArray_JMcLcLSimHeader(void *p);
   static void destruct_JMcLcLSimHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::SimHeader*)
   {
      ::JM::SimHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::SimHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::SimHeader", ::JM::SimHeader::Class_Version(), "./SimHeader.h", 12,
                  typeid(::JM::SimHeader), DefineBehavior(ptr, ptr),
                  &::JM::SimHeader::Dictionary, isa_proxy, 4,
                  sizeof(::JM::SimHeader) );
      instance.SetNew(&new_JMcLcLSimHeader);
      instance.SetNewArray(&newArray_JMcLcLSimHeader);
      instance.SetDelete(&delete_JMcLcLSimHeader);
      instance.SetDeleteArray(&deleteArray_JMcLcLSimHeader);
      instance.SetDestructor(&destruct_JMcLcLSimHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::SimHeader*)
   {
      return GenerateInitInstanceLocal((::JM::SimHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::SimHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *SimHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SimHeader::Class_Name()
{
   return "JM::SimHeader";
}

//______________________________________________________________________________
const char *SimHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SimHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SimHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SimHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SimHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SimHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SimHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SimHeader*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void SimHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::SimHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::SimHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::SimHeader::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void SimHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::SimHeader.
      TClass *R__cl = ::JM::SimHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_event", &m_event);
      R__insp.InspectMember(m_event, "m_event.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_evt_type", (void*)&m_evt_type);
      R__insp.InspectMember("string", (void*)&m_evt_type, "m_evt_type.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef JM::HeaderObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLSimHeader(void *p) {
      return  p ? new(p) ::JM::SimHeader : new ::JM::SimHeader;
   }
   static void *newArray_JMcLcLSimHeader(Long_t nElements, void *p) {
      return p ? new(p) ::JM::SimHeader[nElements] : new ::JM::SimHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLSimHeader(void *p) {
      delete ((::JM::SimHeader*)p);
   }
   static void deleteArray_JMcLcLSimHeader(void *p) {
      delete [] ((::JM::SimHeader*)p);
   }
   static void destruct_JMcLcLSimHeader(void *p) {
      typedef ::JM::SimHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::SimHeader

/********************************************************
* ../src/SimHeaderDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSimHeaderDict();

extern "C" void G__set_cpp_environmentSimHeaderDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SimHeader.h");
  G__cpp_reset_tagtableSimHeaderDict();
}
#include <new>
extern "C" int G__cpp_dllrevSimHeaderDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::SimHeader */
static int G__SimHeaderDict_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SimHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SimHeader[n];
     } else {
       p = new((void*) gvp) JM::SimHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SimHeader;
     } else {
       p = new((void*) gvp) JM::SimHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimHeader*) G__getstructoffset())->event());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SimHeader*) G__getstructoffset())->setEvent((JM::SimEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::SimHeader*) G__getstructoffset())->hasEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((JM::SimHeader*) G__getstructoffset())->getEventType();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SimHeader*) G__getstructoffset())->setEventType(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::SimHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::SimHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::SimHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SimHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SimHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimHeaderDict_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SimHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SimHeaderDict_188_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::SimHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::SimHeader(*(JM::SimHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::SimHeader G__TJMcLcLSimHeader;
static int G__SimHeaderDict_188_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::SimHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::SimHeader*) (soff+(sizeof(JM::SimHeader)*i)))->~G__TJMcLcLSimHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::SimHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::SimHeader*) (soff))->~G__TJMcLcLSimHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimHeaderDict_188_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SimHeader* dest = (JM::SimHeader*) G__getstructoffset();
   *dest = *(JM::SimHeader*) libp->para[0].ref;
   const JM::SimHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::SimHeader */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSimHeaderDict {
 public:
  G__Sizep2memfuncSimHeaderDict(): p(&G__Sizep2memfuncSimHeaderDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSimHeaderDict::*p)();
};

size_t G__get_sizep2memfuncSimHeaderDict()
{
  G__Sizep2memfuncSimHeaderDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSimHeaderDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader))) {
     JM::SimHeader *G__Lderived;
     G__Lderived=(JM::SimHeader*)0x1000;
     {
       JM::HeaderObject *G__Lpbase=(JM::HeaderObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader),G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLHeaderObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JM::EventObject *G__Lpbase=(JM::EventObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader),G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLEventObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader),G__get_linked_tagnum(&G__SimHeaderDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSimHeaderDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimTrack*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimTrack*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimPMTHit*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimPMTHit*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimTTHit*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimTTHit*>",117,G__get_linked_tagnum(&G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::SimHeader */
static void G__setup_memvarJMcLcLSimHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader));
   { JM::SimHeader *p; p=(JM::SimHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSmartRef),-1,-1,4,"m_event=",0,"||");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimHeaderDictLN_string),-1,-1,4,"m_evt_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimHeaderDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSimHeaderDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLSimHeader(void) {
   /* JM::SimHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader));
   G__memfunc_setup("SimHeader",882,G__SimHeaderDict_188_0_1, 105, G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event",546,G__SimHeaderDict_188_0_2, 85, G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLEventObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvent",846,G__SimHeaderDict_188_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::SimEvent' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventEntry",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - eventName n - 'Long64_t' 1 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLEventObject), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - eventName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasEvent",830,G__SimHeaderDict_188_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventType",1252,G__SimHeaderDict_188_0_7, 117, G__get_linked_tagnum(&G__SimHeaderDictLN_string), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventType",1264,G__SimHeaderDict_188_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - evt_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimHeaderDict_188_0_9, 85, G__get_linked_tagnum(&G__SimHeaderDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::SimHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimHeaderDict_188_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimHeaderDict_188_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::SimHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimHeaderDict_188_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::SimHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimHeaderDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimHeaderDict_188_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimHeaderDict_188_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimHeaderDict_188_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SimHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimHeaderDict_188_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimHeaderDict_188_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SimHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SimHeader", 882, G__SimHeaderDict_188_0_21, (int) ('i'), G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader), -1, 0, 1, 1, 1, 0, "u 'JM::SimHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SimHeader", 1008, G__SimHeaderDict_188_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimHeaderDict_188_0_23, (int) ('u'), G__get_linked_tagnum(&G__SimHeaderDictLN_JMcLcLSimHeader), -1, 1, 1, 1, 1, 0, "u 'JM::SimHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSimHeaderDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSimHeaderDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSimHeaderDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SimHeaderDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JMcLcLEventObject = { "JM::EventObject" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JMcLcLHeaderObject = { "JM::HeaderObject" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JMcLcLSmartRef = { "JM::SmartRef" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JMcLcLSimEvent = { "JM::SimEvent" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR = { "vector<JM::SimTrack*,allocator<JM::SimTrack*> >" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimTrack*,allocator<JM::SimTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR = { "vector<JM::SimPMTHit*,allocator<JM::SimPMTHit*> >" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimPMTHit*,allocator<JM::SimPMTHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR = { "vector<JM::SimTTHit*,allocator<JM::SimTTHit*> >" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimTTHit*,allocator<JM::SimTTHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimHeaderDictLN_JMcLcLSimHeader = { "JM::SimHeader" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSimHeaderDict() {
  G__SimHeaderDictLN_TClass.tagnum = -1 ;
  G__SimHeaderDictLN_TBuffer.tagnum = -1 ;
  G__SimHeaderDictLN_TMemberInspector.tagnum = -1 ;
  G__SimHeaderDictLN_TObject.tagnum = -1 ;
  G__SimHeaderDictLN_string.tagnum = -1 ;
  G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SimHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SimHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimHeaderDictLN_JM.tagnum = -1 ;
  G__SimHeaderDictLN_JMcLcLEventObject.tagnum = -1 ;
  G__SimHeaderDictLN_JMcLcLHeaderObject.tagnum = -1 ;
  G__SimHeaderDictLN_JMcLcLSmartRef.tagnum = -1 ;
  G__SimHeaderDictLN_JMcLcLSimEvent.tagnum = -1 ;
  G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR.tagnum = -1 ;
  G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR.tagnum = -1 ;
  G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR.tagnum = -1 ;
  G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimHeaderDictLN_JMcLcLSimHeader.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSimHeaderDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_string);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JM);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JMcLcLEventObject);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JMcLcLHeaderObject);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JMcLcLSmartRef);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JMcLcLSimEvent);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimHeaderDictLN_JMcLcLSimHeader),sizeof(JM::SimHeader),-1,292096,(char*)NULL,G__setup_memvarJMcLcLSimHeader,G__setup_memfuncJMcLcLSimHeader);
}
extern "C" void G__cpp_setupSimHeaderDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSimHeaderDict()");
  G__set_cpp_environmentSimHeaderDict();
  G__cpp_setup_tagtableSimHeaderDict();

  G__cpp_setup_inheritanceSimHeaderDict();

  G__cpp_setup_typetableSimHeaderDict();

  G__cpp_setup_memvarSimHeaderDict();

  G__cpp_setup_memfuncSimHeaderDict();
  G__cpp_setup_globalSimHeaderDict();
  G__cpp_setup_funcSimHeaderDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSimHeaderDict();
  return;
}
class G__cpp_setup_initSimHeaderDict {
  public:
    G__cpp_setup_initSimHeaderDict() { G__add_setup_func("SimHeaderDict",(G__incsetup)(&G__cpp_setupSimHeaderDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSimHeaderDict() { G__remove_setup_func("SimHeaderDict"); }
};
G__cpp_setup_initSimHeaderDict G__cpp_setup_initializerSimHeaderDict;

