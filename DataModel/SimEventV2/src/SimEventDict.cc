//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:45:41 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdISimEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SimEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLSimEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLSimEvent(void *p = 0);
   static void *newArray_JMcLcLSimEvent(Long_t size, void *p);
   static void delete_JMcLcLSimEvent(void *p);
   static void deleteArray_JMcLcLSimEvent(void *p);
   static void destruct_JMcLcLSimEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::SimEvent*)
   {
      ::JM::SimEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::SimEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::SimEvent", ::JM::SimEvent::Class_Version(), "./SimEvent.h", 18,
                  typeid(::JM::SimEvent), DefineBehavior(ptr, ptr),
                  &::JM::SimEvent::Dictionary, isa_proxy, 4,
                  sizeof(::JM::SimEvent) );
      instance.SetNew(&new_JMcLcLSimEvent);
      instance.SetNewArray(&newArray_JMcLcLSimEvent);
      instance.SetDelete(&delete_JMcLcLSimEvent);
      instance.SetDeleteArray(&deleteArray_JMcLcLSimEvent);
      instance.SetDestructor(&destruct_JMcLcLSimEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::SimEvent*)
   {
      return GenerateInitInstanceLocal((::JM::SimEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::SimEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *SimEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SimEvent::Class_Name()
{
   return "JM::SimEvent";
}

//______________________________________________________________________________
const char *SimEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SimEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SimEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::SimEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SimEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SimEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SimEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::SimEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void SimEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::SimEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::SimEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::SimEvent::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void SimEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::SimEvent.
      TClass *R__cl = ::JM::SimEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tracks", (void*)&m_tracks);
      R__insp.InspectMember("vector<SimTrack*>", (void*)&m_tracks, "m_tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cd_hits", (void*)&m_cd_hits);
      R__insp.InspectMember("vector<SimPMTHit*>", (void*)&m_cd_hits, "m_cd_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_wp_hits", (void*)&m_wp_hits);
      R__insp.InspectMember("vector<SimPMTHit*>", (void*)&m_wp_hits, "m_wp_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tt_hits", (void*)&m_tt_hits);
      R__insp.InspectMember("vector<SimTTHit*>", (void*)&m_tt_hits, "m_tt_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nhits", &m_nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nhits_wp", &m_nhits_wp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ntrks", &m_ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nbars", &m_nbars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_counter", &m_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eventid", &m_eventid);
      //This works around a msvc bug and should be harmless on other platforms
      typedef JM::EventObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLSimEvent(void *p) {
      return  p ? new(p) ::JM::SimEvent : new ::JM::SimEvent;
   }
   static void *newArray_JMcLcLSimEvent(Long_t nElements, void *p) {
      return p ? new(p) ::JM::SimEvent[nElements] : new ::JM::SimEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLSimEvent(void *p) {
      delete ((::JM::SimEvent*)p);
   }
   static void deleteArray_JMcLcLSimEvent(void *p) {
      delete [] ((::JM::SimEvent*)p);
   }
   static void destruct_JMcLcLSimEvent(void *p) {
      typedef ::JM::SimEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::SimEvent

namespace ROOT {
   void vectorlEJMcLcLSimPMTHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEJMcLcLSimPMTHitmUgR_Dictionary();
   static void *new_vectorlEJMcLcLSimPMTHitmUgR(void *p = 0);
   static void *newArray_vectorlEJMcLcLSimPMTHitmUgR(Long_t size, void *p);
   static void delete_vectorlEJMcLcLSimPMTHitmUgR(void *p);
   static void deleteArray_vectorlEJMcLcLSimPMTHitmUgR(void *p);
   static void destruct_vectorlEJMcLcLSimPMTHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<JM::SimPMTHit*>*)
   {
      vector<JM::SimPMTHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<JM::SimPMTHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<JM::SimPMTHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<JM::SimPMTHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEJMcLcLSimPMTHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<JM::SimPMTHit*>) );
      instance.SetNew(&new_vectorlEJMcLcLSimPMTHitmUgR);
      instance.SetNewArray(&newArray_vectorlEJMcLcLSimPMTHitmUgR);
      instance.SetDelete(&delete_vectorlEJMcLcLSimPMTHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEJMcLcLSimPMTHitmUgR);
      instance.SetDestructor(&destruct_vectorlEJMcLcLSimPMTHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<JM::SimPMTHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<JM::SimPMTHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEJMcLcLSimPMTHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<JM::SimPMTHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEJMcLcLSimPMTHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimPMTHit*> : new vector<JM::SimPMTHit*>;
   }
   static void *newArray_vectorlEJMcLcLSimPMTHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimPMTHit*>[nElements] : new vector<JM::SimPMTHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEJMcLcLSimPMTHitmUgR(void *p) {
      delete ((vector<JM::SimPMTHit*>*)p);
   }
   static void deleteArray_vectorlEJMcLcLSimPMTHitmUgR(void *p) {
      delete [] ((vector<JM::SimPMTHit*>*)p);
   }
   static void destruct_vectorlEJMcLcLSimPMTHitmUgR(void *p) {
      typedef vector<JM::SimPMTHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<JM::SimPMTHit*>

namespace ROOT {
   void vectorlEJMcLcLSimTTHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEJMcLcLSimTTHitmUgR_Dictionary();
   static void *new_vectorlEJMcLcLSimTTHitmUgR(void *p = 0);
   static void *newArray_vectorlEJMcLcLSimTTHitmUgR(Long_t size, void *p);
   static void delete_vectorlEJMcLcLSimTTHitmUgR(void *p);
   static void deleteArray_vectorlEJMcLcLSimTTHitmUgR(void *p);
   static void destruct_vectorlEJMcLcLSimTTHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<JM::SimTTHit*>*)
   {
      vector<JM::SimTTHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<JM::SimTTHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<JM::SimTTHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<JM::SimTTHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEJMcLcLSimTTHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<JM::SimTTHit*>) );
      instance.SetNew(&new_vectorlEJMcLcLSimTTHitmUgR);
      instance.SetNewArray(&newArray_vectorlEJMcLcLSimTTHitmUgR);
      instance.SetDelete(&delete_vectorlEJMcLcLSimTTHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEJMcLcLSimTTHitmUgR);
      instance.SetDestructor(&destruct_vectorlEJMcLcLSimTTHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<JM::SimTTHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<JM::SimTTHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEJMcLcLSimTTHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<JM::SimTTHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEJMcLcLSimTTHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimTTHit*> : new vector<JM::SimTTHit*>;
   }
   static void *newArray_vectorlEJMcLcLSimTTHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimTTHit*>[nElements] : new vector<JM::SimTTHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEJMcLcLSimTTHitmUgR(void *p) {
      delete ((vector<JM::SimTTHit*>*)p);
   }
   static void deleteArray_vectorlEJMcLcLSimTTHitmUgR(void *p) {
      delete [] ((vector<JM::SimTTHit*>*)p);
   }
   static void destruct_vectorlEJMcLcLSimTTHitmUgR(void *p) {
      typedef vector<JM::SimTTHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<JM::SimTTHit*>

namespace ROOT {
   void vectorlEJMcLcLSimTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEJMcLcLSimTrackmUgR_Dictionary();
   static void *new_vectorlEJMcLcLSimTrackmUgR(void *p = 0);
   static void *newArray_vectorlEJMcLcLSimTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEJMcLcLSimTrackmUgR(void *p);
   static void deleteArray_vectorlEJMcLcLSimTrackmUgR(void *p);
   static void destruct_vectorlEJMcLcLSimTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<JM::SimTrack*>*)
   {
      vector<JM::SimTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<JM::SimTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<JM::SimTrack*>", -2, "prec_stl/vector", 49,
                  typeid(vector<JM::SimTrack*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEJMcLcLSimTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<JM::SimTrack*>) );
      instance.SetNew(&new_vectorlEJMcLcLSimTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEJMcLcLSimTrackmUgR);
      instance.SetDelete(&delete_vectorlEJMcLcLSimTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEJMcLcLSimTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEJMcLcLSimTrackmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<JM::SimTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<JM::SimTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEJMcLcLSimTrackmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<JM::SimTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEJMcLcLSimTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimTrack*> : new vector<JM::SimTrack*>;
   }
   static void *newArray_vectorlEJMcLcLSimTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<JM::SimTrack*>[nElements] : new vector<JM::SimTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEJMcLcLSimTrackmUgR(void *p) {
      delete ((vector<JM::SimTrack*>*)p);
   }
   static void deleteArray_vectorlEJMcLcLSimTrackmUgR(void *p) {
      delete [] ((vector<JM::SimTrack*>*)p);
   }
   static void destruct_vectorlEJMcLcLSimTrackmUgR(void *p) {
      typedef vector<JM::SimTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<JM::SimTrack*>

/********************************************************
* ../src/SimEventDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSimEventDict();

extern "C" void G__set_cpp_environmentSimEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SimEvent.h");
  G__cpp_reset_tagtableSimEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevSimEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::SimEvent */
static int G__SimEventDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SimEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SimEvent[n];
     } else {
       p = new((void*) gvp) JM::SimEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::SimEvent;
     } else {
       p = new((void*) gvp) JM::SimEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SimEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JM::SimEvent((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) JM::SimEvent((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimEvent*) G__getstructoffset())->addTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SimTrack*>& obj = ((const JM::SimEvent*) G__getstructoffset())->getTracksVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimEvent*) G__getstructoffset())->findTrackByTrkID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimEvent*) G__getstructoffset())->addCDHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SimPMTHit*>& obj = ((const JM::SimEvent*) G__getstructoffset())->getCDHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimEvent*) G__getstructoffset())->addWPHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SimPMTHit*>& obj = ((const JM::SimEvent*) G__getstructoffset())->getWPHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::SimEvent*) G__getstructoffset())->addTTHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<JM::SimTTHit*>& obj = ((const JM::SimEvent*) G__getstructoffset())->getTTHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JM::SimEvent*) G__getstructoffset())->getEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SimEvent*) G__getstructoffset())->setEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::SimEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::SimEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::SimEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::SimEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SimEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::SimEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimEventDict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::SimEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::SimEvent G__TJMcLcLSimEvent;
static int G__SimEventDict_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::SimEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::SimEvent*) (soff+(sizeof(JM::SimEvent)*i)))->~G__TJMcLcLSimEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::SimEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::SimEvent*) (soff))->~G__TJMcLcLSimEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimEventDict_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::SimEvent* dest = (JM::SimEvent*) G__getstructoffset();
   *dest = *(JM::SimEvent*) libp->para[0].ref;
   const JM::SimEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::SimEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSimEventDict {
 public:
  G__Sizep2memfuncSimEventDict(): p(&G__Sizep2memfuncSimEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSimEventDict::*p)();
};

size_t G__get_sizep2memfuncSimEventDict()
{
  G__Sizep2memfuncSimEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSimEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent))) {
     JM::SimEvent *G__Lderived;
     G__Lderived=(JM::SimEvent*)0x1000;
     {
       JM::EventObject *G__Lpbase=(JM::EventObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent),G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLEventObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent),G__get_linked_tagnum(&G__SimEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSimEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimTrack*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimTrack*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimPMTHit*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimPMTHit*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimTTHit*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::SimTTHit*>",117,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::SimEvent */
static void G__setup_memvarJMcLcLSimEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent));
   { JM::SimEvent *p; p=(JM::SimEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR),G__defined_typename("vector<SimTrack*>"),-1,4,"m_tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),G__defined_typename("vector<SimPMTHit*>"),-1,4,"m_cd_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR),G__defined_typename("vector<SimPMTHit*>"),-1,4,"m_wp_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR),G__defined_typename("vector<SimTTHit*>"),-1,4,"m_tt_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nhits_wp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nbars=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_counter=",0,"only for debug");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_eventid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSimEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLSimEvent(void) {
   /* JM::SimEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent));
   G__memfunc_setup("SimEvent",811,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent), -1, 0, 1, 1, 4, 0, "u 'JM::SimEvent' - 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimEvent",811,G__SimEventDict_173_0_2, 105, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimEvent",811,G__SimEventDict_173_0_3, 105, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__SimEventDict_173_0_4, 85, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTracksVec",1222,G__SimEventDict_173_0_5, 117, G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR), G__defined_typename("vector<JM::SimTrack*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findTrackByTrkID",1551,G__SimEventDict_173_0_6, 85, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - trkid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCDHit",725,G__SimEventDict_173_0_7, 85, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimPMTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCDHitsVec",1149,G__SimEventDict_173_0_8, 117, G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR), G__defined_typename("vector<JM::SimPMTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWPHit",757,G__SimEventDict_173_0_9, 85, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimPMTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWPHitsVec",1181,G__SimEventDict_173_0_10, 117, G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR), G__defined_typename("vector<JM::SimPMTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTTHit",758,G__SimEventDict_173_0_11, 85, G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimTTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTTHitsVec",1182,G__SimEventDict_173_0_12, 117, G__get_linked_tagnum(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR), G__defined_typename("vector<JM::SimTTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventID",975,G__SimEventDict_173_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__SimEventDict_173_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimEventDict_173_0_15, 85, G__get_linked_tagnum(&G__SimEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::SimEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimEventDict_173_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimEventDict_173_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::SimEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimEventDict_173_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::SimEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimEventDict_173_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimEventDict_173_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimEventDict_173_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SimEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimEventDict_173_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::SimEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimEventDict_173_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::SimEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SimEvent", 937, G__SimEventDict_173_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimEventDict_173_0_28, (int) ('u'), G__get_linked_tagnum(&G__SimEventDictLN_JMcLcLSimEvent), -1, 1, 1, 1, 1, 0, "u 'JM::SimEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSimEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSimEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSimEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SimEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__SimEventDictLN_JMcLcLEventObject = { "JM::EventObject" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_JMcLcLSimPMTHit = { "JM::SimPMTHit" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_JMcLcLSimTTHit = { "JM::SimTTHit" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_JMcLcLSimTrack = { "JM::SimTrack" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_JMcLcLSimEvent = { "JM::SimEvent" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR = { "vector<JM::SimTrack*,allocator<JM::SimTrack*> >" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimTrack*,allocator<JM::SimTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR = { "vector<JM::SimPMTHit*,allocator<JM::SimPMTHit*> >" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimPMTHit*,allocator<JM::SimPMTHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR = { "vector<JM::SimTTHit*,allocator<JM::SimTTHit*> >" , 99 , -1 };
G__linked_taginfo G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::SimTTHit*,allocator<JM::SimTTHit*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSimEventDict() {
  G__SimEventDictLN_TClass.tagnum = -1 ;
  G__SimEventDictLN_TBuffer.tagnum = -1 ;
  G__SimEventDictLN_TMemberInspector.tagnum = -1 ;
  G__SimEventDictLN_TObject.tagnum = -1 ;
  G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SimEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SimEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimEventDictLN_JM.tagnum = -1 ;
  G__SimEventDictLN_JMcLcLEventObject.tagnum = -1 ;
  G__SimEventDictLN_JMcLcLSimPMTHit.tagnum = -1 ;
  G__SimEventDictLN_JMcLcLSimTTHit.tagnum = -1 ;
  G__SimEventDictLN_JMcLcLSimTrack.tagnum = -1 ;
  G__SimEventDictLN_JMcLcLSimEvent.tagnum = -1 ;
  G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR.tagnum = -1 ;
  G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR.tagnum = -1 ;
  G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR.tagnum = -1 ;
  G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSimEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_JM);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_JMcLcLEventObject);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_JMcLcLSimPMTHit);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_JMcLcLSimTTHit);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_JMcLcLSimTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimEventDictLN_JMcLcLSimEvent),sizeof(JM::SimEvent),-1,325376,(char*)NULL,G__setup_memvarJMcLcLSimEvent,G__setup_memfuncJMcLcLSimEvent);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_vectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTrackmUcOallocatorlEJMcLcLSimTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_vectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimPMTHitmUcOallocatorlEJMcLcLSimPMTHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_vectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimEventDictLN_reverse_iteratorlEvectorlEJMcLcLSimTTHitmUcOallocatorlEJMcLcLSimTTHitmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupSimEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSimEventDict()");
  G__set_cpp_environmentSimEventDict();
  G__cpp_setup_tagtableSimEventDict();

  G__cpp_setup_inheritanceSimEventDict();

  G__cpp_setup_typetableSimEventDict();

  G__cpp_setup_memvarSimEventDict();

  G__cpp_setup_memfuncSimEventDict();
  G__cpp_setup_globalSimEventDict();
  G__cpp_setup_funcSimEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSimEventDict();
  return;
}
class G__cpp_setup_initSimEventDict {
  public:
    G__cpp_setup_initSimEventDict() { G__add_setup_func("SimEventDict",(G__incsetup)(&G__cpp_setupSimEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSimEventDict() { G__remove_setup_func("SimEventDict"); }
};
G__cpp_setup_initSimEventDict G__cpp_setup_initializerSimEventDict;

