//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:42:27 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdICDRecEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CDRecEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLCDRecEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLCDRecEvent(void *p = 0);
   static void *newArray_JMcLcLCDRecEvent(Long_t size, void *p);
   static void delete_JMcLcLCDRecEvent(void *p);
   static void deleteArray_JMcLcLCDRecEvent(void *p);
   static void destruct_JMcLcLCDRecEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::CDRecEvent*)
   {
      ::JM::CDRecEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::CDRecEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::CDRecEvent", ::JM::CDRecEvent::Class_Version(), "./CDRecEvent.h", 38,
                  typeid(::JM::CDRecEvent), DefineBehavior(ptr, ptr),
                  &::JM::CDRecEvent::Dictionary, isa_proxy, 4,
                  sizeof(::JM::CDRecEvent) );
      instance.SetNew(&new_JMcLcLCDRecEvent);
      instance.SetNewArray(&newArray_JMcLcLCDRecEvent);
      instance.SetDelete(&delete_JMcLcLCDRecEvent);
      instance.SetDeleteArray(&deleteArray_JMcLcLCDRecEvent);
      instance.SetDestructor(&destruct_JMcLcLCDRecEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::CDRecEvent*)
   {
      return GenerateInitInstanceLocal((::JM::CDRecEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::CDRecEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *CDRecEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CDRecEvent::Class_Name()
{
   return "JM::CDRecEvent";
}

//______________________________________________________________________________
const char *CDRecEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::CDRecEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CDRecEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::CDRecEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CDRecEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::CDRecEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CDRecEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::CDRecEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void CDRecEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::CDRecEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::CDRecEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::CDRecEvent::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void CDRecEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::CDRecEvent.
      TClass *R__cl = ::JM::CDRecEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nVertexes", &m_nVertexes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PESum", (void*)&m_PESum);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_PESum, "m_PESum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_energy", (void*)&m_energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_energy, "m_energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eprec", (void*)&m_eprec);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_eprec, "m_eprec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_x", (void*)&m_x);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_x, "m_x.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_y", (void*)&m_y);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_y, "m_y.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_z", (void*)&m_z);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_z, "m_z.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_px", (void*)&m_px);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_px, "m_px.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_py", (void*)&m_py);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_py, "m_py.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_pz", (void*)&m_pz);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_pz, "m_pz.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chisq", (void*)&m_chisq);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_chisq, "m_chisq.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_energyQuality", (void*)&m_energyQuality);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_energyQuality, "m_energyQuality.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_positionQuality", (void*)&m_positionQuality);
      R__insp.InspectMember("vector<Double_t>", (void*)&m_positionQuality, "m_positionQuality.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef JM::EventObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLCDRecEvent(void *p) {
      return  p ? new(p) ::JM::CDRecEvent : new ::JM::CDRecEvent;
   }
   static void *newArray_JMcLcLCDRecEvent(Long_t nElements, void *p) {
      return p ? new(p) ::JM::CDRecEvent[nElements] : new ::JM::CDRecEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLCDRecEvent(void *p) {
      delete ((::JM::CDRecEvent*)p);
   }
   static void deleteArray_JMcLcLCDRecEvent(void *p) {
      delete [] ((::JM::CDRecEvent*)p);
   }
   static void destruct_JMcLcLCDRecEvent(void *p) {
      typedef ::JM::CDRecEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::CDRecEvent

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* ../src/CDRecEventDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCDRecEventDict();

extern "C" void G__set_cpp_environmentCDRecEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CDRecEvent.h");
  G__cpp_reset_tagtableCDRecEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevCDRecEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::CDRecEvent */
static int G__CDRecEventDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::CDRecEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::CDRecEvent[n];
     } else {
       p = new((void*) gvp) JM::CDRecEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::CDRecEvent;
     } else {
       p = new((void*) gvp) JM::CDRecEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const JM::CDRecEvent*) G__getstructoffset())->nVertexes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setNVertexes((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->peSumVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPESum(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPESum(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->peSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->energyVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEnergy(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEnergy(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->eprecVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEprec(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEprec(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->eprec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->xVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setX(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setX(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->yVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setY(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setY(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->zVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setZ(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setZ(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->pxVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPx(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPx(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->pyVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPy(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPy(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->pzVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPz(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPz(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->chisqVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setChisq(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setChisq(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->chisq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->energyQualityVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEnergyQuality(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setEnergyQuality(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->energyQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const JM::CDRecEvent*) G__getstructoffset())->positionQualityVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPositionQuality(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->setPositionQuality(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JM::CDRecEvent*) G__getstructoffset())->positionQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::CDRecEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::CDRecEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::CDRecEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::CDRecEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::CDRecEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::CDRecEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::CDRecEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::CDRecEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDRecEventDict_170_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::CDRecEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CDRecEventDict_170_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::CDRecEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::CDRecEvent(*(JM::CDRecEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::CDRecEvent G__TJMcLcLCDRecEvent;
static int G__CDRecEventDict_170_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::CDRecEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::CDRecEvent*) (soff+(sizeof(JM::CDRecEvent)*i)))->~G__TJMcLcLCDRecEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::CDRecEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::CDRecEvent*) (soff))->~G__TJMcLcLCDRecEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CDRecEventDict_170_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::CDRecEvent* dest = (JM::CDRecEvent*) G__getstructoffset();
   *dest = *(JM::CDRecEvent*) libp->para[0].ref;
   const JM::CDRecEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::CDRecEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCDRecEventDict {
 public:
  G__Sizep2memfuncCDRecEventDict(): p(&G__Sizep2memfuncCDRecEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCDRecEventDict::*p)();
};

size_t G__get_sizep2memfuncCDRecEventDict()
{
  G__Sizep2memfuncCDRecEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCDRecEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent))) {
     JM::CDRecEvent *G__Lderived;
     G__Lderived=(JM::CDRecEvent*)0x1000;
     {
       JM::EventObject *G__Lpbase=(JM::EventObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent),G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLEventObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent),G__get_linked_tagnum(&G__CDRecEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCDRecEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::CDRecEvent */
static void G__setup_memvarJMcLcLCDRecEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent));
   { JM::CDRecEvent *p; p=(JM::CDRecEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"m_nVertexes=",0,"number of reconstructed vertexes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_PESum=",0,"Total number of PE");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_energy=",0,"Best estimation of deposit energy. Unit:MeV");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_eprec=",0,"Reconstructed positron energy. Unit:MeV");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_x=",0,"x position. Unit:mm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_y=",0,"y position. Unit:mm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_z=",0,"z position. Unit:mm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_px=",0,"x direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_py=",0,"y direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_pz=",0,"z direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_chisq=",0,"goodness of the fit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_energyQuality=",0,"quality of energy recontruction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"m_positionQuality=",0,"quality of position recontruction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CDRecEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCDRecEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLCDRecEvent(void) {
   /* JM::CDRecEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent));
   G__memfunc_setup("CDRecEvent",931,G__CDRecEventDict_170_0_1, 105, G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nVertexes",964,G__CDRecEventDict_170_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNVertexes",1264,G__CDRecEventDict_170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("peSumVec",808,G__CDRecEventDict_170_0_4, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPESum",790,G__CDRecEventDict_170_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPESum",790,G__CDRecEventDict_170_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("peSum",522,G__CDRecEventDict_170_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyVec",936,G__CDRecEventDict_170_0_8, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__CDRecEventDict_170_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__CDRecEventDict_170_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__CDRecEventDict_170_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eprecVec",813,G__CDRecEventDict_170_0_12, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEprec",827,G__CDRecEventDict_170_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEprec",827,G__CDRecEventDict_170_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eprec",527,G__CDRecEventDict_170_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xVec",406,G__CDRecEventDict_170_0_16, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__CDRecEventDict_170_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__CDRecEventDict_170_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__CDRecEventDict_170_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yVec",407,G__CDRecEventDict_170_0_20, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__CDRecEventDict_170_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__CDRecEventDict_170_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__CDRecEventDict_170_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zVec",408,G__CDRecEventDict_170_0_24, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__CDRecEventDict_170_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__CDRecEventDict_170_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__CDRecEventDict_170_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pxVec",518,G__CDRecEventDict_170_0_28, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx",532,G__CDRecEventDict_170_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx",532,G__CDRecEventDict_170_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__CDRecEventDict_170_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pyVec",519,G__CDRecEventDict_170_0_32, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy",533,G__CDRecEventDict_170_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy",533,G__CDRecEventDict_170_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__CDRecEventDict_170_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzVec",520,G__CDRecEventDict_170_0_36, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz",534,G__CDRecEventDict_170_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz",534,G__CDRecEventDict_170_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__CDRecEventDict_170_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chisqVec",822,G__CDRecEventDict_170_0_40, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChisq",836,G__CDRecEventDict_170_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChisq",836,G__CDRecEventDict_170_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chisq",536,G__CDRecEventDict_170_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyQualityVec",1681,G__CDRecEventDict_170_0_44, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergyQuality",1695,G__CDRecEventDict_170_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergyQuality",1695,G__CDRecEventDict_170_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyQuality",1395,G__CDRecEventDict_170_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionQualityVec",1916,G__CDRecEventDict_170_0_48, 117, G__get_linked_tagnum(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionQuality",1930,G__CDRecEventDict_170_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionQuality",1930,G__CDRecEventDict_170_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionQuality",1630,G__CDRecEventDict_170_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CDRecEventDict_170_0_52, 85, G__get_linked_tagnum(&G__CDRecEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::CDRecEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CDRecEventDict_170_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::CDRecEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CDRecEventDict_170_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::CDRecEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CDRecEventDict_170_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::CDRecEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CDRecEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CDRecEventDict_170_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CDRecEventDict_170_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::CDRecEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CDRecEventDict_170_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::CDRecEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CDRecEventDict_170_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::CDRecEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CDRecEventDict_170_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::CDRecEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CDRecEvent", 931, G__CDRecEventDict_170_0_64, (int) ('i'), G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent), -1, 0, 1, 1, 1, 0, "u 'JM::CDRecEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CDRecEvent", 1057, G__CDRecEventDict_170_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CDRecEventDict_170_0_66, (int) ('u'), G__get_linked_tagnum(&G__CDRecEventDictLN_JMcLcLCDRecEvent), -1, 1, 1, 1, 1, 0, "u 'JM::CDRecEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCDRecEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCDRecEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCDRecEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CDRecEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__CDRecEventDictLN_JMcLcLEventObject = { "JM::EventObject" , 99 , -1 };
G__linked_taginfo G__CDRecEventDictLN_JMcLcLCDRecEvent = { "JM::CDRecEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCDRecEventDict() {
  G__CDRecEventDictLN_TClass.tagnum = -1 ;
  G__CDRecEventDictLN_TBuffer.tagnum = -1 ;
  G__CDRecEventDictLN_TMemberInspector.tagnum = -1 ;
  G__CDRecEventDictLN_TObject.tagnum = -1 ;
  G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CDRecEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CDRecEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CDRecEventDictLN_JM.tagnum = -1 ;
  G__CDRecEventDictLN_JMcLcLEventObject.tagnum = -1 ;
  G__CDRecEventDictLN_JMcLcLCDRecEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCDRecEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_JM);
   G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_JMcLcLEventObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CDRecEventDictLN_JMcLcLCDRecEvent),sizeof(JM::CDRecEvent),-1,292096,(char*)NULL,G__setup_memvarJMcLcLCDRecEvent,G__setup_memfuncJMcLcLCDRecEvent);
}
extern "C" void G__cpp_setupCDRecEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCDRecEventDict()");
  G__set_cpp_environmentCDRecEventDict();
  G__cpp_setup_tagtableCDRecEventDict();

  G__cpp_setup_inheritanceCDRecEventDict();

  G__cpp_setup_typetableCDRecEventDict();

  G__cpp_setup_memvarCDRecEventDict();

  G__cpp_setup_memfuncCDRecEventDict();
  G__cpp_setup_globalCDRecEventDict();
  G__cpp_setup_funcCDRecEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCDRecEventDict();
  return;
}
class G__cpp_setup_initCDRecEventDict {
  public:
    G__cpp_setup_initCDRecEventDict() { G__add_setup_func("CDRecEventDict",(G__incsetup)(&G__cpp_setupCDRecEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCDRecEventDict() { G__remove_setup_func("CDRecEventDict"); }
};
G__cpp_setup_initCDRecEventDict G__cpp_setup_initializerCDRecEventDict;

