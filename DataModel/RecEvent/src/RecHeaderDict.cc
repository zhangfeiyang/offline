//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:42:27 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIRecHeaderDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RecHeaderDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JMcLcLRecHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JMcLcLRecHeader(void *p = 0);
   static void *newArray_JMcLcLRecHeader(Long_t size, void *p);
   static void delete_JMcLcLRecHeader(void *p);
   static void deleteArray_JMcLcLRecHeader(void *p);
   static void destruct_JMcLcLRecHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JM::RecHeader*)
   {
      ::JM::RecHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JM::RecHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JM::RecHeader", ::JM::RecHeader::Class_Version(), "./RecHeader.h", 43,
                  typeid(::JM::RecHeader), DefineBehavior(ptr, ptr),
                  &::JM::RecHeader::Dictionary, isa_proxy, 4,
                  sizeof(::JM::RecHeader) );
      instance.SetNew(&new_JMcLcLRecHeader);
      instance.SetNewArray(&newArray_JMcLcLRecHeader);
      instance.SetDelete(&delete_JMcLcLRecHeader);
      instance.SetDeleteArray(&deleteArray_JMcLcLRecHeader);
      instance.SetDestructor(&destruct_JMcLcLRecHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JM::RecHeader*)
   {
      return GenerateInitInstanceLocal((::JM::RecHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JM::RecHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace JM {
//______________________________________________________________________________
TClass *RecHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHeader::Class_Name()
{
   return "JM::RecHeader";
}

//______________________________________________________________________________
const char *RecHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::RecHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JM::RecHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::RecHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JM::RecHeader*)0x0)->GetClass();
   return fgIsA;
}

} // namespace JM
      namespace JM {
//______________________________________________________________________________
void RecHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class JM::RecHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JM::RecHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(JM::RecHeader::Class(),this);
   }
}

} // namespace JM
//______________________________________________________________________________
      namespace JM {
void RecHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JM::RecHeader.
      TClass *R__cl = ::JM::RecHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CDEvent", &m_CDEvent);
      R__insp.InspectMember(m_CDEvent, "m_CDEvent.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CDTrackEvent", &m_CDTrackEvent);
      R__insp.InspectMember(m_CDTrackEvent, "m_CDTrackEvent.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_WPEvent", &m_WPEvent);
      R__insp.InspectMember(m_WPEvent, "m_WPEvent.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TTEvent", &m_TTEvent);
      R__insp.InspectMember(m_TTEvent, "m_TTEvent.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef JM::HeaderObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace JM
namespace ROOT {
   // Wrappers around operator new
   static void *new_JMcLcLRecHeader(void *p) {
      return  p ? new(p) ::JM::RecHeader : new ::JM::RecHeader;
   }
   static void *newArray_JMcLcLRecHeader(Long_t nElements, void *p) {
      return p ? new(p) ::JM::RecHeader[nElements] : new ::JM::RecHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_JMcLcLRecHeader(void *p) {
      delete ((::JM::RecHeader*)p);
   }
   static void deleteArray_JMcLcLRecHeader(void *p) {
      delete [] ((::JM::RecHeader*)p);
   }
   static void destruct_JMcLcLRecHeader(void *p) {
      typedef ::JM::RecHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JM::RecHeader

/********************************************************
* ../src/RecHeaderDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRecHeaderDict();

extern "C" void G__set_cpp_environmentRecHeaderDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RecHeader.h");
  G__cpp_reset_tagtableRecHeaderDict();
}
#include <new>
extern "C" int G__cpp_dllrevRecHeaderDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JM::RecHeader */
static int G__RecHeaderDict_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::RecHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::RecHeader[n];
     } else {
       p = new((void*) gvp) JM::RecHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JM::RecHeader;
     } else {
       p = new((void*) gvp) JM::RecHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::RecHeader*) G__getstructoffset())->cdEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::RecHeader*) G__getstructoffset())->setCDEvent((JM::CDRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::RecHeader*) G__getstructoffset())->cdTrackEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::RecHeader*) G__getstructoffset())->setCDTrackEvent((JM::CDTrackRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::RecHeader*) G__getstructoffset())->wpEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::RecHeader*) G__getstructoffset())->setWPEvent((JM::WPRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JM::RecHeader*) G__getstructoffset())->ttEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::RecHeader*) G__getstructoffset())->setTTEvent((JM::TTRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::RecHeader*) G__getstructoffset())->hasCDEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::RecHeader*) G__getstructoffset())->hasCDTrackEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::RecHeader*) G__getstructoffset())->hasWPEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JM::RecHeader*) G__getstructoffset())->hasTTEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JM::RecHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::RecHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JM::RecHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JM::RecHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JM::RecHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::RecHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::RecHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JM::RecHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RecHeaderDict_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JM::RecHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RecHeaderDict_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JM::RecHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JM::RecHeader(*(JM::RecHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JM::RecHeader G__TJMcLcLRecHeader;
static int G__RecHeaderDict_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JM::RecHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JM::RecHeader*) (soff+(sizeof(JM::RecHeader)*i)))->~G__TJMcLcLRecHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JM::RecHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JM::RecHeader*) (soff))->~G__TJMcLcLRecHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RecHeaderDict_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JM::RecHeader* dest = (JM::RecHeader*) G__getstructoffset();
   *dest = *(JM::RecHeader*) libp->para[0].ref;
   const JM::RecHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JM::RecHeader */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRecHeaderDict {
 public:
  G__Sizep2memfuncRecHeaderDict(): p(&G__Sizep2memfuncRecHeaderDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRecHeaderDict::*p)();
};

size_t G__get_sizep2memfuncRecHeaderDict()
{
  G__Sizep2memfuncRecHeaderDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRecHeaderDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader))) {
     JM::RecHeader *G__Lderived;
     G__Lderived=(JM::RecHeader*)0x1000;
     {
       JM::HeaderObject *G__Lpbase=(JM::HeaderObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader),G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLHeaderObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JM::EventObject *G__Lpbase=(JM::EventObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader),G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLEventObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader),G__get_linked_tagnum(&G__RecHeaderDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRecHeaderDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<JM::RecTrack*>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JM::RecHeader */
static void G__setup_memvarJMcLcLRecHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader));
   { JM::RecHeader *p; p=(JM::RecHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLSmartRef),-1,-1,4,"m_CDEvent=",0,"||Smart pointer to the RecEvent (CD)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLSmartRef),-1,-1,4,"m_CDTrackEvent=",0,"||Smart pointer to the RecTrackEvent (CD)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLSmartRef),-1,-1,4,"m_WPEvent=",0,"||Smart pointer to the RecEvent (WP)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLSmartRef),-1,-1,4,"m_TTEvent=",0,"||Smart pointer to the RecEvent (TT)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RecHeaderDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRecHeaderDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJMcLcLRecHeader(void) {
   /* JM::RecHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader));
   G__memfunc_setup("RecHeader",867,G__RecHeaderDict_219_0_1, 105, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cdEvent",713,G__RecHeaderDict_219_0_2, 85, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLCDRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCDEvent",981,G__RecHeaderDict_219_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::CDRecEvent' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cdTrackEvent",1214,G__RecHeaderDict_219_0_4, 85, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLCDTrackRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCDTrackEvent",1482,G__RecHeaderDict_219_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::CDTrackRecEvent' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wpEvent",745,G__RecHeaderDict_219_0_6, 85, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLWPRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWPEvent",1013,G__RecHeaderDict_219_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::WPRecEvent' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ttEvent",746,G__RecHeaderDict_219_0_8, 85, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLTTRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTTEvent",1014,G__RecHeaderDict_219_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'JM::TTRecEvent' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventEntry",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - eventName n - 'Long64_t' 1 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLEventObject), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - eventName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasCDEvent",965,G__RecHeaderDict_219_0_12, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasCDTrackEvent",1466,G__RecHeaderDict_219_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasWPEvent",997,G__RecHeaderDict_219_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasTTEvent",998,G__RecHeaderDict_219_0_15, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RecHeaderDict_219_0_16, 85, G__get_linked_tagnum(&G__RecHeaderDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JM::RecHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RecHeaderDict_219_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::RecHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RecHeaderDict_219_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JM::RecHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RecHeaderDict_219_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JM::RecHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RecHeaderDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RecHeaderDict_219_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RecHeaderDict_219_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::RecHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RecHeaderDict_219_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::RecHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RecHeaderDict_219_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JM::RecHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RecHeaderDict_219_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JM::RecHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHeader", 867, G__RecHeaderDict_219_0_28, (int) ('i'), G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader), -1, 0, 1, 1, 1, 0, "u 'JM::RecHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHeader", 993, G__RecHeaderDict_219_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RecHeaderDict_219_0_30, (int) ('u'), G__get_linked_tagnum(&G__RecHeaderDictLN_JMcLcLRecHeader), -1, 1, 1, 1, 1, 0, "u 'JM::RecHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRecHeaderDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRecHeaderDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRecHeaderDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RecHeaderDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JM = { "JM" , 110 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLEventObject = { "JM::EventObject" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLHeaderObject = { "JM::HeaderObject" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLCDRecEvent = { "JM::CDRecEvent" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLCDTrackRecEvent = { "JM::CDTrackRecEvent" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR = { "vector<JM::RecTrack*,allocator<JM::RecTrack*> >" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<JM::RecTrack*,allocator<JM::RecTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLWPRecEvent = { "JM::WPRecEvent" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLTTRecEvent = { "JM::TTRecEvent" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLSmartRef = { "JM::SmartRef" , 99 , -1 };
G__linked_taginfo G__RecHeaderDictLN_JMcLcLRecHeader = { "JM::RecHeader" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRecHeaderDict() {
  G__RecHeaderDictLN_TClass.tagnum = -1 ;
  G__RecHeaderDictLN_TBuffer.tagnum = -1 ;
  G__RecHeaderDictLN_TMemberInspector.tagnum = -1 ;
  G__RecHeaderDictLN_TObject.tagnum = -1 ;
  G__RecHeaderDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RecHeaderDictLN_string.tagnum = -1 ;
  G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RecHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RecHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RecHeaderDictLN_JM.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLEventObject.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLHeaderObject.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLCDRecEvent.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLCDTrackRecEvent.tagnum = -1 ;
  G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR.tagnum = -1 ;
  G__RecHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLWPRecEvent.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLTTRecEvent.tagnum = -1 ;
  G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RecHeaderDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLSmartRef.tagnum = -1 ;
  G__RecHeaderDictLN_JMcLcLRecHeader.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRecHeaderDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_string);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JM);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLEventObject);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLHeaderObject);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLCDRecEvent);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLCDTrackRecEvent);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_vectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEJMcLcLRecTrackmUcOallocatorlEJMcLcLRecTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLWPRecEvent);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLTTRecEvent);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLSmartRef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RecHeaderDictLN_JMcLcLRecHeader),sizeof(JM::RecHeader),-1,292096,(char*)NULL,G__setup_memvarJMcLcLRecHeader,G__setup_memfuncJMcLcLRecHeader);
}
extern "C" void G__cpp_setupRecHeaderDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRecHeaderDict()");
  G__set_cpp_environmentRecHeaderDict();
  G__cpp_setup_tagtableRecHeaderDict();

  G__cpp_setup_inheritanceRecHeaderDict();

  G__cpp_setup_typetableRecHeaderDict();

  G__cpp_setup_memvarRecHeaderDict();

  G__cpp_setup_memfuncRecHeaderDict();
  G__cpp_setup_globalRecHeaderDict();
  G__cpp_setup_funcRecHeaderDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRecHeaderDict();
  return;
}
class G__cpp_setup_initRecHeaderDict {
  public:
    G__cpp_setup_initRecHeaderDict() { G__add_setup_func("RecHeaderDict",(G__incsetup)(&G__cpp_setupRecHeaderDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRecHeaderDict() { G__remove_setup_func("RecHeaderDict"); }
};
G__cpp_setup_initRecHeaderDict G__cpp_setup_initializerRecHeaderDict;

