#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ nestedtypedefs;
#pragma link C++ nestedclasses;

#pragma link off all_function CLHEP::HepLorentzVector;
#pragma link C++ class CLHEP::HepLorentzVector+;
#pragma link C++ class CLHEP::HepAxisAngle+;
#pragma link C++ class CLHEP::HepBoost+;
#pragma link C++ class CLHEP::HepBoostX+;
#pragma link C++ class CLHEP::HepBoostY+;
#pragma link C++ class CLHEP::HepBoostZ+;
#pragma link C++ class CLHEP::HepEulerAngles+;
#pragma link C++ class CLHEP::HepLorentzRotation+;
#pragma link C++ class CLHEP::HepRotation+;
#pragma link C++ class CLHEP::Hep4RotationInterface+;
#pragma link C++ class CLHEP::Hep3RotationInterface+;
#pragma link C++ struct CLHEP::HepRep3x3;
#pragma link C++ struct CLHEP::HepRep4x4;
#pragma link C++ struct CLHEP::HepRep4x4Symmetric;
#pragma link C++ class CLHEP::HepRotationX+;
#pragma link C++ class CLHEP::HepRotationY+;
#pragma link C++ class CLHEP::HepRotationZ+;
#pragma link C++ class CLHEP::Hep3Vector+;
#pragma link C++ class CLHEP::Hep2Vector+;
#pragma link C++ class CLHEP::HepDiagMatrix+;
#pragma link C++ class CLHEP::HepGenMatrix+;
#pragma link C++ class CLHEP::HepMatrix+;
#pragma link C++ class CLHEP::HepSymMatrix+;
#pragma link C++ class CLHEP::HepVector+;

#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(double, double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(double);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector();
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(const Hep3Vector &, double);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(double, const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::~HepLorentzVector();
#pragma link C++ function CLHEP::HepLorentzVector::x();
#pragma link C++ function CLHEP::HepLorentzVector::y();
#pragma link C++ function CLHEP::HepLorentzVector::z();
#pragma link C++ function CLHEP::HepLorentzVector::t();
#pragma link C++ function CLHEP::HepLorentzVector::setX(double);
#pragma link C++ function CLHEP::HepLorentzVector::setY(double);
#pragma link C++ function CLHEP::HepLorentzVector::setZ(double);
#pragma link C++ function CLHEP::HepLorentzVector::setT(double);
#pragma link C++ function CLHEP::HepLorentzVector::px();
#pragma link C++ function CLHEP::HepLorentzVector::py();
#pragma link C++ function CLHEP::HepLorentzVector::pz();
#pragma link C++ function CLHEP::HepLorentzVector::e();
#pragma link C++ function CLHEP::HepLorentzVector::setPx(double);
#pragma link C++ function CLHEP::HepLorentzVector::setPy(double);
#pragma link C++ function CLHEP::HepLorentzVector::setPz(double);
#pragma link C++ function CLHEP::HepLorentzVector::setE(double);
#pragma link C++ function CLHEP::HepLorentzVector::vect();
#pragma link C++ function CLHEP::HepLorentzVector::setVect(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::theta();
#pragma link C++ function CLHEP::HepLorentzVector::cosTheta();
#pragma link C++ function CLHEP::HepLorentzVector::phi();
#pragma link C++ function CLHEP::HepLorentzVector::rho();
#pragma link C++ function CLHEP::HepLorentzVector::setTheta(double);
#pragma link C++ function CLHEP::HepLorentzVector::setPhi(double);
#pragma link C++ function CLHEP::HepLorentzVector::setRho(double);
#pragma link C++ function CLHEP::HepLorentzVector::operator () (int);
#pragma link C++ function CLHEP::HepLorentzVector::operator [] (int);
#pragma link C++ function CLHEP::HepLorentzVector::operator = (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator +  (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator += (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator -  (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator -= (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator - ();
#pragma link C++ function CLHEP::HepLorentzVector::operator *= (double);
#pragma link C++ function CLHEP::HepLorentzVector::operator /= (double);
#pragma link C++ function CLHEP::HepLorentzVector::operator == (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator != (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::perp2();
#pragma link C++ function CLHEP::HepLorentzVector::perp();
#pragma link C++ function CLHEP::HepLorentzVector::setPerp(double);
#pragma link C++ function CLHEP::HepLorentzVector::perp2(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::perp(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::angle(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::mag2();
#pragma link C++ function CLHEP::HepLorentzVector::m2();
#pragma link C++ function CLHEP::HepLorentzVector::mag();
#pragma link C++ function CLHEP::HepLorentzVector::m();
#pragma link C++ function CLHEP::HepLorentzVector::mt2();
#pragma link C++ function CLHEP::HepLorentzVector::mt();
#pragma link C++ function CLHEP::HepLorentzVector::et2();
#pragma link C++ function CLHEP::HepLorentzVector::et();
#pragma link C++ function CLHEP::HepLorentzVector::dot(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator * (const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::invariantMass2( const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::invariantMass ( const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::setVectMag(const Hep3Vector &, double);
#pragma link C++ function CLHEP::HepLorentzVector::setVectM(const Hep3Vector &, double);
#pragma link C++ function CLHEP::HepLorentzVector::plus();
#pragma link C++ function CLHEP::HepLorentzVector::minus();
#pragma link C++ function CLHEP::HepLorentzVector::boostVector();
#pragma link C++ function CLHEP::HepLorentzVector::boost(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::boost(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::boostX( double );
#pragma link C++ function CLHEP::HepLorentzVector::boostY( double );
#pragma link C++ function CLHEP::HepLorentzVector::boostZ( double );
#pragma link C++ function CLHEP::HepLorentzVector::rapidity();
#pragma link C++ function CLHEP::HepLorentzVector::pseudoRapidity();
#pragma link C++ function CLHEP::HepLorentzVector::isTimelike();
#pragma link C++ function CLHEP::HepLorentzVector::isSpacelike();
#pragma link C++ function CLHEP::HepLorentzVector::isLightlike(double);
#pragma link C++ function CLHEP::HepLorentzVector::rotateX(double);
#pragma link C++ function CLHEP::HepLorentzVector::rotateY(double);
#pragma link C++ function CLHEP::HepLorentzVector::rotateZ(double);
#pragma link C++ function CLHEP::HepLorentzVector::rotateUz(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::rotate(double, const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator *= (const HepRotation &);
#pragma link C++ function CLHEP::HepLorentzVector::transform(const HepRotation &);
#pragma link C++ function CLHEP::HepLorentzVector::operator *= (const HepLorentzRotation &);
#pragma link C++ function CLHEP::HepLorentzVector::transform(const HepLorentzRotation &);
#pragma link C++ function CLHEP::HepLorentzVector::setMetric( ZMpvMetric_t );
#pragma link C++ function CLHEP::HepLorentzVector::getMetric();
#pragma link C++ function CLHEP::HepLorentzVector::set(double, double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::set(double, double, double, Tcomponent);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(double, double, double, Tcomponent);
#pragma link C++ function CLHEP::HepLorentzVector::set(Tcomponent, double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(Tcomponent, double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::set(double);
#pragma link C++ function CLHEP::HepLorentzVector::set(Tcomponent);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(Tcomponent);
#pragma link C++ function CLHEP::HepLorentzVector::set(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::HepLorentzVector(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator=(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::set(const Hep3Vector &, double);
#pragma link C++ function CLHEP::HepLorentzVector::set(double,  const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::getX();
#pragma link C++ function CLHEP::HepLorentzVector::getY();
#pragma link C++ function CLHEP::HepLorentzVector::getZ();
#pragma link C++ function CLHEP::HepLorentzVector::getT();
#pragma link C++ function CLHEP::HepLorentzVector::v();
#pragma link C++ function CLHEP::HepLorentzVector::getV();
#pragma link C++ function CLHEP::HepLorentzVector::setV(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::setV(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::setRThetaPhi(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::setREtaPhi(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::setRhoPhiZ(double, double, double);
#pragma link C++ function CLHEP::HepLorentzVector::compare( const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator >(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator <(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator>=(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::operator<=(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::isNear(const HepLorentzVector &,double);
#pragma link C++ function CLHEP::HepLorentzVector::howNear(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::isNearCM(const HepLorentzVector &,double);
#pragma link C++ function CLHEP::HepLorentzVector::howNearCM(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::isParallel(const HepLorentzVector &,double);
#pragma link C++ function CLHEP::HepLorentzVector::howParallel(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::getTolerance();
#pragma link C++ function CLHEP::HepLorentzVector::setTolerance(double);
#pragma link C++ function CLHEP::HepLorentzVector::deltaR(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::howLightlike();
#pragma link C++ function CLHEP::HepLorentzVector::euclideanNorm2();
#pragma link C++ function CLHEP::HepLorentzVector::euclideanNorm();
#pragma link C++ function CLHEP::HepLorentzVector::restMass2();
#pragma link C++ function CLHEP::HepLorentzVector::invariantMass2();
#pragma link C++ function CLHEP::HepLorentzVector::restMass();
#pragma link C++ function CLHEP::HepLorentzVector::invariantMass();
#pragma link C++ function CLHEP::HepLorentzVector::rest4Vector();
#pragma link C++ function CLHEP::HepLorentzVector::beta();
#pragma link C++ function CLHEP::HepLorentzVector::gamma();
#pragma link C++ function CLHEP::HepLorentzVector::eta();
#pragma link C++ function CLHEP::HepLorentzVector::eta(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::rapidity(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::coLinearRapidity();
#pragma link C++ function CLHEP::HepLorentzVector::findBoostToCM();
#pragma link C++ function CLHEP::HepLorentzVector::findBoostToCM( const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::et2(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::et(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::diff2(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::delta2Euclidean(const HepLorentzVector &);
#pragma link C++ function CLHEP::HepLorentzVector::plus(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::minus(const Hep3Vector &);
#pragma link C++ function CLHEP::HepLorentzVector::rotate(const Hep3Vector &, double);
#pragma link C++ function CLHEP::HepLorentzVector::rotate(const HepAxisAngle &);
#pragma link C++ function CLHEP::HepLorentzVector::rotate(const HepEulerAngles &);
#pragma link C++ function CLHEP::HepLorentzVector::rotate(double,double, double);
#pragma link C++ function CLHEP::HepLorentzVector::boost(const Hep3Vector &, double);

#endif
