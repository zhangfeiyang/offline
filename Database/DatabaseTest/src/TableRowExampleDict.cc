//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J17v1r1-Pre2/ExternalLibs/ROOT/5.34.11/bin/rootcint at Mon Oct 30 17:11:31 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdITableRowExampleDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TableRowExampleDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TableRowExample_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TableRowExample(void *p = 0);
   static void *newArray_TableRowExample(Long_t size, void *p);
   static void delete_TableRowExample(void *p);
   static void deleteArray_TableRowExample(void *p);
   static void destruct_TableRowExample(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TableRowExample*)
   {
      ::TableRowExample *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TableRowExample >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TableRowExample", ::TableRowExample::Class_Version(), "./TableRowExample.h", 7,
                  typeid(::TableRowExample), DefineBehavior(ptr, ptr),
                  &::TableRowExample::Dictionary, isa_proxy, 4,
                  sizeof(::TableRowExample) );
      instance.SetNew(&new_TableRowExample);
      instance.SetNewArray(&newArray_TableRowExample);
      instance.SetDelete(&delete_TableRowExample);
      instance.SetDeleteArray(&deleteArray_TableRowExample);
      instance.SetDestructor(&destruct_TableRowExample);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TableRowExample*)
   {
      return GenerateInitInstanceLocal((::TableRowExample*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TableRowExample*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TableRowExample::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TableRowExample::Class_Name()
{
   return "TableRowExample";
}

//______________________________________________________________________________
const char *TableRowExample::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TableRowExample*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TableRowExample::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TableRowExample*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TableRowExample::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TableRowExample*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TableRowExample::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TableRowExample*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TableRowExample::Streamer(TBuffer &R__b)
{
   // Stream an object of class TableRowExample.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TableRowExample::Class(),this);
   } else {
      R__b.WriteClassBuffer(TableRowExample::Class(),this);
   }
}

//______________________________________________________________________________
void TableRowExample::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TableRowExample.
      TClass *R__cl = ::TableRowExample::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fColumn_1", &fColumn_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColumn_2", &fColumn_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColumn_3", &fColumn_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColumn_4", &fColumn_4);
      DBITableRow::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TableRowExample(void *p) {
      return  p ? new(p) ::TableRowExample : new ::TableRowExample;
   }
   static void *newArray_TableRowExample(Long_t nElements, void *p) {
      return p ? new(p) ::TableRowExample[nElements] : new ::TableRowExample[nElements];
   }
   // Wrapper around operator delete
   static void delete_TableRowExample(void *p) {
      delete ((::TableRowExample*)p);
   }
   static void deleteArray_TableRowExample(void *p) {
      delete [] ((::TableRowExample*)p);
   }
   static void destruct_TableRowExample(void *p) {
      typedef ::TableRowExample current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TableRowExample

/********************************************************
* ../src/TableRowExampleDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTableRowExampleDict();

extern "C" void G__set_cpp_environmentTableRowExampleDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TableRowExample.h");
  G__cpp_reset_tagtableTableRowExampleDict();
}
#include <new>
extern "C" int G__cpp_dllrevTableRowExampleDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TableRowExample */
static int G__TableRowExampleDict_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TableRowExample* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TableRowExample[n];
     } else {
       p = new((void*) gvp) TableRowExample[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TableRowExample;
     } else {
       p = new((void*) gvp) TableRowExample;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TableRowExample*) G__getstructoffset())->SetColumn_1((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TableRowExample*) G__getstructoffset())->SetColumn_2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TableRowExample*) G__getstructoffset())->SetColumn_3((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TableRowExample*) G__getstructoffset())->SetColumn_4((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TableRowExample*) G__getstructoffset())->GetColumn_1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TableRowExample*) G__getstructoffset())->GetColumn_2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TableRowExample*) G__getstructoffset())->GetColumn_3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TableRowExample*) G__getstructoffset())->GetColumn_4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TableRowExample::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TableRowExample::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TableRowExample::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TableRowExample::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TableRowExample*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TableRowExample::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TableRowExample::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TableRowExample::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TableRowExampleDict_463_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TableRowExample::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TableRowExampleDict_463_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TableRowExample* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TableRowExample(*(TableRowExample*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TableRowExample G__TTableRowExample;
static int G__TableRowExampleDict_463_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TableRowExample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TableRowExample*) (soff+(sizeof(TableRowExample)*i)))->~G__TTableRowExample();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TableRowExample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TableRowExample*) (soff))->~G__TTableRowExample();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TableRowExampleDict_463_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TableRowExample* dest = (TableRowExample*) G__getstructoffset();
   *dest = *(TableRowExample*) libp->para[0].ref;
   const TableRowExample& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TableRowExample */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTableRowExampleDict {
 public:
  G__Sizep2memfuncTableRowExampleDict(): p(&G__Sizep2memfuncTableRowExampleDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTableRowExampleDict::*p)();
};

size_t G__get_sizep2memfuncTableRowExampleDict()
{
  G__Sizep2memfuncTableRowExampleDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTableRowExampleDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample))) {
     TableRowExample *G__Lderived;
     G__Lderived=(TableRowExample*)0x1000;
     {
       DBITableRow *G__Lpbase=(DBITableRow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample),G__get_linked_tagnum(&G__TableRowExampleDictLN_DBITableRow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample),G__get_linked_tagnum(&G__TableRowExampleDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTableRowExampleDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TableRowExample */
static void G__setup_memvarTableRowExample(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample));
   { TableRowExample *p; p=(TableRowExample*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fColumn_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fColumn_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"fColumn_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fColumn_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TableRowExampleDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTableRowExampleDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTableRowExample(void) {
   /* TableRowExample */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample));
   G__memfunc_setup("TableRowExample",1516,G__TableRowExampleDict_463_0_1, 105, G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColumn_1",1066,G__TableRowExampleDict_463_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColumn_2",1067,G__TableRowExampleDict_463_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColumn_3",1068,G__TableRowExampleDict_463_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColumn_4",1069,G__TableRowExampleDict_463_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumn_1",1054,G__TableRowExampleDict_463_0_6, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumn_2",1055,G__TableRowExampleDict_463_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumn_3",1056,G__TableRowExampleDict_463_0_8, 108, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumn_4",1057,G__TableRowExampleDict_463_0_9, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TableRowExampleDict_463_0_10, 85, G__get_linked_tagnum(&G__TableRowExampleDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TableRowExample::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TableRowExampleDict_463_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TableRowExample::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TableRowExampleDict_463_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TableRowExample::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TableRowExampleDict_463_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TableRowExample::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TableRowExampleDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TableRowExampleDict_463_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TableRowExampleDict_463_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TableRowExample::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TableRowExampleDict_463_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TableRowExample::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TableRowExampleDict_463_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TableRowExample::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TableRowExampleDict_463_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TableRowExample::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TableRowExample", 1516, G__TableRowExampleDict_463_0_22, (int) ('i'), G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample), -1, 0, 1, 1, 1, 0, "u 'TableRowExample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TableRowExample", 1642, G__TableRowExampleDict_463_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TableRowExampleDict_463_0_24, (int) ('u'), G__get_linked_tagnum(&G__TableRowExampleDictLN_TableRowExample), -1, 1, 1, 1, 1, 0, "u 'TableRowExample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTableRowExampleDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTableRowExampleDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTableRowExampleDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TableRowExampleDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_DBITableRow = { "DBITableRow" , 99 , -1 };
G__linked_taginfo G__TableRowExampleDictLN_TableRowExample = { "TableRowExample" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTableRowExampleDict() {
  G__TableRowExampleDictLN_TClass.tagnum = -1 ;
  G__TableRowExampleDictLN_TBuffer.tagnum = -1 ;
  G__TableRowExampleDictLN_TMemberInspector.tagnum = -1 ;
  G__TableRowExampleDictLN_TObject.tagnum = -1 ;
  G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TableRowExampleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TableRowExampleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TableRowExampleDictLN_DBITableRow.tagnum = -1 ;
  G__TableRowExampleDictLN_TableRowExample.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTableRowExampleDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_DBITableRow);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TableRowExampleDictLN_TableRowExample),sizeof(TableRowExample),-1,292096,(char*)NULL,G__setup_memvarTableRowExample,G__setup_memfuncTableRowExample);
}
extern "C" void G__cpp_setupTableRowExampleDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTableRowExampleDict()");
  G__set_cpp_environmentTableRowExampleDict();
  G__cpp_setup_tagtableTableRowExampleDict();

  G__cpp_setup_inheritanceTableRowExampleDict();

  G__cpp_setup_typetableTableRowExampleDict();

  G__cpp_setup_memvarTableRowExampleDict();

  G__cpp_setup_memfuncTableRowExampleDict();
  G__cpp_setup_globalTableRowExampleDict();
  G__cpp_setup_funcTableRowExampleDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTableRowExampleDict();
  return;
}
class G__cpp_setup_initTableRowExampleDict {
  public:
    G__cpp_setup_initTableRowExampleDict() { G__add_setup_func("TableRowExampleDict",(G__incsetup)(&G__cpp_setupTableRowExampleDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTableRowExampleDict() { G__remove_setup_func("TableRowExampleDict"); }
};
G__cpp_setup_initTableRowExampleDict G__cpp_setup_initializerTableRowExampleDict;

