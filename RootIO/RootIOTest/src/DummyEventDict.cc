//
// File generated by /cvmfs/juno.ihep.ac.cn/sl6_amd64_gcc447/Pre-Release/J18v1r1-Pre1/ExternalLibs/ROOT/5.34.11/bin/rootcint at Thu Dec 28 13:50:18 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIDummyEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DummyEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DummyEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DummyEvent(void *p = 0);
   static void *newArray_DummyEvent(Long_t size, void *p);
   static void delete_DummyEvent(void *p);
   static void deleteArray_DummyEvent(void *p);
   static void destruct_DummyEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DummyEvent*)
   {
      ::DummyEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DummyEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DummyEvent", ::DummyEvent::Class_Version(), "./DummyEvent.h", 17,
                  typeid(::DummyEvent), DefineBehavior(ptr, ptr),
                  &::DummyEvent::Dictionary, isa_proxy, 4,
                  sizeof(::DummyEvent) );
      instance.SetNew(&new_DummyEvent);
      instance.SetNewArray(&newArray_DummyEvent);
      instance.SetDelete(&delete_DummyEvent);
      instance.SetDeleteArray(&deleteArray_DummyEvent);
      instance.SetDestructor(&destruct_DummyEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DummyEvent*)
   {
      return GenerateInitInstanceLocal((::DummyEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DummyEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DummyEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DummyEvent::Class_Name()
{
   return "DummyEvent";
}

//______________________________________________________________________________
const char *DummyEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DummyEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DummyEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DummyEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DummyEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DummyEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DummyEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DummyEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void DummyEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class DummyEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DummyEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(DummyEvent::Class(),this);
   }
}

//______________________________________________________________________________
void DummyEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DummyEvent.
      TClass *R__cl = ::DummyEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tracks", (void*)&m_tracks);
      R__insp.InspectMember("vector<DummyTrack*>", (void*)&m_tracks, "m_tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cd_hits", (void*)&m_cd_hits);
      R__insp.InspectMember("vector<DummyPMTHit*>", (void*)&m_cd_hits, "m_cd_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_wp_hits", (void*)&m_wp_hits);
      R__insp.InspectMember("vector<DummyPMTHit*>", (void*)&m_wp_hits, "m_wp_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tt_hits", (void*)&m_tt_hits);
      R__insp.InspectMember("vector<DummyTTHit*>", (void*)&m_tt_hits, "m_tt_hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clones_tracks", &m_clones_tracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clones_cd_hits", &m_clones_cd_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clones_wp_hits", &m_clones_wp_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clones_tt_hits", &m_clones_tt_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nhits", &m_nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nhits_wp", &m_nhits_wp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ntrks", &m_ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nbars", &m_nbars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_counter", &m_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eventid", &m_eventid);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DummyEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DummyEvent : new ::DummyEvent;
   }
   static void *newArray_DummyEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DummyEvent[nElements] : new ::DummyEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_DummyEvent(void *p) {
      delete ((::DummyEvent*)p);
   }
   static void deleteArray_DummyEvent(void *p) {
      delete [] ((::DummyEvent*)p);
   }
   static void destruct_DummyEvent(void *p) {
      typedef ::DummyEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DummyEvent

namespace ROOT {
   void vectorlEDummyPMTHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDummyPMTHitmUgR_Dictionary();
   static void *new_vectorlEDummyPMTHitmUgR(void *p = 0);
   static void *newArray_vectorlEDummyPMTHitmUgR(Long_t size, void *p);
   static void delete_vectorlEDummyPMTHitmUgR(void *p);
   static void deleteArray_vectorlEDummyPMTHitmUgR(void *p);
   static void destruct_vectorlEDummyPMTHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<DummyPMTHit*>*)
   {
      vector<DummyPMTHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DummyPMTHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DummyPMTHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<DummyPMTHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDummyPMTHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DummyPMTHit*>) );
      instance.SetNew(&new_vectorlEDummyPMTHitmUgR);
      instance.SetNewArray(&newArray_vectorlEDummyPMTHitmUgR);
      instance.SetDelete(&delete_vectorlEDummyPMTHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDummyPMTHitmUgR);
      instance.SetDestructor(&destruct_vectorlEDummyPMTHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<DummyPMTHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DummyPMTHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDummyPMTHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<DummyPMTHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDummyPMTHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyPMTHit*> : new vector<DummyPMTHit*>;
   }
   static void *newArray_vectorlEDummyPMTHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyPMTHit*>[nElements] : new vector<DummyPMTHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDummyPMTHitmUgR(void *p) {
      delete ((vector<DummyPMTHit*>*)p);
   }
   static void deleteArray_vectorlEDummyPMTHitmUgR(void *p) {
      delete [] ((vector<DummyPMTHit*>*)p);
   }
   static void destruct_vectorlEDummyPMTHitmUgR(void *p) {
      typedef vector<DummyPMTHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<DummyPMTHit*>

namespace ROOT {
   void vectorlEDummyTTHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDummyTTHitmUgR_Dictionary();
   static void *new_vectorlEDummyTTHitmUgR(void *p = 0);
   static void *newArray_vectorlEDummyTTHitmUgR(Long_t size, void *p);
   static void delete_vectorlEDummyTTHitmUgR(void *p);
   static void deleteArray_vectorlEDummyTTHitmUgR(void *p);
   static void destruct_vectorlEDummyTTHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<DummyTTHit*>*)
   {
      vector<DummyTTHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DummyTTHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DummyTTHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<DummyTTHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDummyTTHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DummyTTHit*>) );
      instance.SetNew(&new_vectorlEDummyTTHitmUgR);
      instance.SetNewArray(&newArray_vectorlEDummyTTHitmUgR);
      instance.SetDelete(&delete_vectorlEDummyTTHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDummyTTHitmUgR);
      instance.SetDestructor(&destruct_vectorlEDummyTTHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<DummyTTHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DummyTTHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDummyTTHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<DummyTTHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDummyTTHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyTTHit*> : new vector<DummyTTHit*>;
   }
   static void *newArray_vectorlEDummyTTHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyTTHit*>[nElements] : new vector<DummyTTHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDummyTTHitmUgR(void *p) {
      delete ((vector<DummyTTHit*>*)p);
   }
   static void deleteArray_vectorlEDummyTTHitmUgR(void *p) {
      delete [] ((vector<DummyTTHit*>*)p);
   }
   static void destruct_vectorlEDummyTTHitmUgR(void *p) {
      typedef vector<DummyTTHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<DummyTTHit*>

namespace ROOT {
   void vectorlEDummyTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDummyTrackmUgR_Dictionary();
   static void *new_vectorlEDummyTrackmUgR(void *p = 0);
   static void *newArray_vectorlEDummyTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEDummyTrackmUgR(void *p);
   static void deleteArray_vectorlEDummyTrackmUgR(void *p);
   static void destruct_vectorlEDummyTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<DummyTrack*>*)
   {
      vector<DummyTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DummyTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DummyTrack*>", -2, "prec_stl/vector", 49,
                  typeid(vector<DummyTrack*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDummyTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DummyTrack*>) );
      instance.SetNew(&new_vectorlEDummyTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEDummyTrackmUgR);
      instance.SetDelete(&delete_vectorlEDummyTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDummyTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEDummyTrackmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<DummyTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DummyTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDummyTrackmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<DummyTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDummyTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyTrack*> : new vector<DummyTrack*>;
   }
   static void *newArray_vectorlEDummyTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DummyTrack*>[nElements] : new vector<DummyTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDummyTrackmUgR(void *p) {
      delete ((vector<DummyTrack*>*)p);
   }
   static void deleteArray_vectorlEDummyTrackmUgR(void *p) {
      delete [] ((vector<DummyTrack*>*)p);
   }
   static void destruct_vectorlEDummyTrackmUgR(void *p) {
      typedef vector<DummyTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<DummyTrack*>

/********************************************************
* ../src/DummyEventDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDummyEventDict();

extern "C" void G__set_cpp_environmentDummyEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("DummyEvent.h");
  G__cpp_reset_tagtableDummyEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevDummyEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DummyEvent */
static int G__DummyEventDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DummyEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DummyEvent[n];
     } else {
       p = new((void*) gvp) DummyEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DummyEvent;
     } else {
       p = new((void*) gvp) DummyEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DummyEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DummyEvent((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) DummyEvent((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->addTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<DummyTrack*>& obj = ((const DummyEvent*) G__getstructoffset())->getTracksVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->getTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->findTrackByTrkID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->addCDHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<DummyPMTHit*>& obj = ((const DummyEvent*) G__getstructoffset())->getCDHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->getCDHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->addWPHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<DummyPMTHit*>& obj = ((const DummyEvent*) G__getstructoffset())->getWPHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->getWPHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->addTTHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<DummyTTHit*>& obj = ((const DummyEvent*) G__getstructoffset())->getTTHitsVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DummyEvent*) G__getstructoffset())->getTTHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DummyEvent*) G__getstructoffset())->getEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyEvent*) G__getstructoffset())->setEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DummyEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DummyEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DummyEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DummyEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DummyEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DummyEventDict_196_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DummyEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DummyEvent G__TDummyEvent;
static int G__DummyEventDict_196_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DummyEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DummyEvent*) (soff+(sizeof(DummyEvent)*i)))->~G__TDummyEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DummyEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DummyEvent*) (soff))->~G__TDummyEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DummyEventDict_196_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DummyEvent* dest = (DummyEvent*) G__getstructoffset();
   *dest = *(DummyEvent*) libp->para[0].ref;
   const DummyEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DummyEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDummyEventDict {
 public:
  G__Sizep2memfuncDummyEventDict(): p(&G__Sizep2memfuncDummyEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDummyEventDict::*p)();
};

size_t G__get_sizep2memfuncDummyEventDict()
{
  G__Sizep2memfuncDummyEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDummyEventDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDummyEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DummyTrack*>",117,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DummyPMTHit*>",117,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DummyTTHit*>",117,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DummyEvent */
static void G__setup_memvarDummyEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent));
   { DummyEvent *p; p=(DummyEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR),G__defined_typename("vector<DummyTrack*>"),-1,4,"m_tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR),G__defined_typename("vector<DummyPMTHit*>"),-1,4,"m_cd_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR),G__defined_typename("vector<DummyPMTHit*>"),-1,4,"m_wp_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR),G__defined_typename("vector<DummyTTHit*>"),-1,4,"m_tt_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray),-1,-1,4,"m_clones_tracks=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray),-1,-1,4,"m_clones_cd_hits=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray),-1,-1,4,"m_clones_wp_hits=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray),-1,-1,4,"m_clones_tt_hits=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nhits_wp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nbars=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_counter=",0,"only for debug");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_eventid=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DummyEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDummyEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDummyEvent(void) {
   /* DummyEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent));
   G__memfunc_setup("DummyEvent",1038,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent), -1, 0, 1, 1, 4, 0, "u 'DummyEvent' - 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DummyEvent",1038,G__DummyEventDict_196_0_2, 105, G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DummyEvent",1038,G__DummyEventDict_196_0_3, 105, G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__DummyEventDict_196_0_4, 85, G__get_linked_tagnum(&G__DummyEventDictLN_DummyTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTracksVec",1222,G__DummyEventDict_196_0_5, 117, G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR), G__defined_typename("vector<DummyTrack*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTracks",936,G__DummyEventDict_196_0_6, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findTrackByTrkID",1551,G__DummyEventDict_196_0_7, 85, G__get_linked_tagnum(&G__DummyEventDictLN_DummyTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - trkid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCDHit",725,G__DummyEventDict_196_0_8, 85, G__get_linked_tagnum(&G__DummyEventDictLN_DummyPMTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCDHitsVec",1149,G__DummyEventDict_196_0_9, 117, G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR), G__defined_typename("vector<DummyPMTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCDHits",863,G__DummyEventDict_196_0_10, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWPHit",757,G__DummyEventDict_196_0_11, 85, G__get_linked_tagnum(&G__DummyEventDictLN_DummyPMTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWPHitsVec",1181,G__DummyEventDict_196_0_12, 117, G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR), G__defined_typename("vector<DummyPMTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWPHits",895,G__DummyEventDict_196_0_13, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTTHit",758,G__DummyEventDict_196_0_14, 85, G__get_linked_tagnum(&G__DummyEventDictLN_DummyTTHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTTHitsVec",1182,G__DummyEventDict_196_0_15, 117, G__get_linked_tagnum(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR), G__defined_typename("vector<DummyTTHit*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTTHits",896,G__DummyEventDict_196_0_16, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventID",975,G__DummyEventDict_196_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__DummyEventDict_196_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DummyEventDict_196_0_19, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DummyEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DummyEventDict_196_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DummyEventDict_196_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DummyEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DummyEventDict_196_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DummyEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DummyEventDict_196_0_23, 85, G__get_linked_tagnum(&G__DummyEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DummyEventDict_196_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DummyEventDict_196_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DummyEventDict_196_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DummyEventDict_196_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DummyEventDict_196_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DummyEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DummyEventDict_196_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DummyEventDict_196_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DummyEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DummyEvent", 1164, G__DummyEventDict_196_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DummyEventDict_196_0_32, (int) ('u'), G__get_linked_tagnum(&G__DummyEventDictLN_DummyEvent), -1, 1, 1, 1, 1, 0, "u 'DummyEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDummyEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDummyEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDummyEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DummyEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_DummyPMTHit = { "DummyPMTHit" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_DummyTTHit = { "DummyTTHit" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_DummyTrack = { "DummyTrack" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DummyEventDictLN_DummyEvent = { "DummyEvent" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR = { "vector<DummyTrack*,allocator<DummyTrack*> >" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DummyTrack*,allocator<DummyTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR = { "vector<DummyPMTHit*,allocator<DummyPMTHit*> >" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DummyPMTHit*,allocator<DummyPMTHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR = { "vector<DummyTTHit*,allocator<DummyTTHit*> >" , 99 , -1 };
G__linked_taginfo G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DummyTTHit*,allocator<DummyTTHit*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDummyEventDict() {
  G__DummyEventDictLN_TClass.tagnum = -1 ;
  G__DummyEventDictLN_TBuffer.tagnum = -1 ;
  G__DummyEventDictLN_TMemberInspector.tagnum = -1 ;
  G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DummyEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DummyEventDictLN_TClonesArray.tagnum = -1 ;
  G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DummyEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DummyEventDictLN_DummyPMTHit.tagnum = -1 ;
  G__DummyEventDictLN_DummyTTHit.tagnum = -1 ;
  G__DummyEventDictLN_DummyTrack.tagnum = -1 ;
  G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DummyEventDictLN_DummyEvent.tagnum = -1 ;
  G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR.tagnum = -1 ;
  G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR.tagnum = -1 ;
  G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR.tagnum = -1 ;
  G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDummyEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_DummyPMTHit);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_DummyTTHit);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_DummyTrack);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DummyEventDictLN_DummyEvent),sizeof(DummyEvent),-1,296704,(char*)NULL,G__setup_memvarDummyEvent,G__setup_memfuncDummyEvent);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_vectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTrackmUcOallocatorlEDummyTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_vectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyPMTHitmUcOallocatorlEDummyPMTHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_vectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DummyEventDictLN_reverse_iteratorlEvectorlEDummyTTHitmUcOallocatorlEDummyTTHitmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDummyEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDummyEventDict()");
  G__set_cpp_environmentDummyEventDict();
  G__cpp_setup_tagtableDummyEventDict();

  G__cpp_setup_inheritanceDummyEventDict();

  G__cpp_setup_typetableDummyEventDict();

  G__cpp_setup_memvarDummyEventDict();

  G__cpp_setup_memfuncDummyEventDict();
  G__cpp_setup_globalDummyEventDict();
  G__cpp_setup_funcDummyEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDummyEventDict();
  return;
}
class G__cpp_setup_initDummyEventDict {
  public:
    G__cpp_setup_initDummyEventDict() { G__add_setup_func("DummyEventDict",(G__incsetup)(&G__cpp_setupDummyEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDummyEventDict() { G__remove_setup_func("DummyEventDict"); }
};
G__cpp_setup_initDummyEventDict G__cpp_setup_initializerDummyEventDict;

